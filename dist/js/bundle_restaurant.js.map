{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/idb/lib/idb.js","src/js/dbhelper.js","src/js/images.js","src/js/restaurant_info.js"],"names":[],"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","file":"bundle_restaurant.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\n\n(function() {\n  function toArray(arr) {\n    return Array.prototype.slice.call(arr);\n  }\n\n  function promisifyRequest(request) {\n    return new Promise(function(resolve, reject) {\n      request.onsuccess = function() {\n        resolve(request.result);\n      };\n\n      request.onerror = function() {\n        reject(request.error);\n      };\n    });\n  }\n\n  function promisifyRequestCall(obj, method, args) {\n    var request;\n    var p = new Promise(function(resolve, reject) {\n      request = obj[method].apply(obj, args);\n      promisifyRequest(request).then(resolve, reject);\n    });\n\n    p.request = request;\n    return p;\n  }\n\n  function promisifyCursorRequestCall(obj, method, args) {\n    var p = promisifyRequestCall(obj, method, args);\n    return p.then(function(value) {\n      if (!value) return;\n      return new Cursor(value, p.request);\n    });\n  }\n\n  function proxyProperties(ProxyClass, targetProp, properties) {\n    properties.forEach(function(prop) {\n      Object.defineProperty(ProxyClass.prototype, prop, {\n        get: function() {\n          return this[targetProp][prop];\n        },\n        set: function(val) {\n          this[targetProp][prop] = val;\n        }\n      });\n    });\n  }\n\n  function proxyRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function proxyMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return this[targetProp][prop].apply(this[targetProp], arguments);\n      };\n    });\n  }\n\n  function proxyCursorRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyCursorRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function Index(index) {\n    this._index = index;\n  }\n\n  proxyProperties(Index, '_index', [\n    'name',\n    'keyPath',\n    'multiEntry',\n    'unique'\n  ]);\n\n  proxyRequestMethods(Index, '_index', IDBIndex, [\n    'get',\n    'getKey',\n    'getAll',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(Index, '_index', IDBIndex, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  function Cursor(cursor, request) {\n    this._cursor = cursor;\n    this._request = request;\n  }\n\n  proxyProperties(Cursor, '_cursor', [\n    'direction',\n    'key',\n    'primaryKey',\n    'value'\n  ]);\n\n  proxyRequestMethods(Cursor, '_cursor', IDBCursor, [\n    'update',\n    'delete'\n  ]);\n\n  // proxy 'next' methods\n  ['advance', 'continue', 'continuePrimaryKey'].forEach(function(methodName) {\n    if (!(methodName in IDBCursor.prototype)) return;\n    Cursor.prototype[methodName] = function() {\n      var cursor = this;\n      var args = arguments;\n      return Promise.resolve().then(function() {\n        cursor._cursor[methodName].apply(cursor._cursor, args);\n        return promisifyRequest(cursor._request).then(function(value) {\n          if (!value) return;\n          return new Cursor(value, cursor._request);\n        });\n      });\n    };\n  });\n\n  function ObjectStore(store) {\n    this._store = store;\n  }\n\n  ObjectStore.prototype.createIndex = function() {\n    return new Index(this._store.createIndex.apply(this._store, arguments));\n  };\n\n  ObjectStore.prototype.index = function() {\n    return new Index(this._store.index.apply(this._store, arguments));\n  };\n\n  proxyProperties(ObjectStore, '_store', [\n    'name',\n    'keyPath',\n    'indexNames',\n    'autoIncrement'\n  ]);\n\n  proxyRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'put',\n    'add',\n    'delete',\n    'clear',\n    'get',\n    'getAll',\n    'getKey',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  proxyMethods(ObjectStore, '_store', IDBObjectStore, [\n    'deleteIndex'\n  ]);\n\n  function Transaction(idbTransaction) {\n    this._tx = idbTransaction;\n    this.complete = new Promise(function(resolve, reject) {\n      idbTransaction.oncomplete = function() {\n        resolve();\n      };\n      idbTransaction.onerror = function() {\n        reject(idbTransaction.error);\n      };\n      idbTransaction.onabort = function() {\n        reject(idbTransaction.error);\n      };\n    });\n  }\n\n  Transaction.prototype.objectStore = function() {\n    return new ObjectStore(this._tx.objectStore.apply(this._tx, arguments));\n  };\n\n  proxyProperties(Transaction, '_tx', [\n    'objectStoreNames',\n    'mode'\n  ]);\n\n  proxyMethods(Transaction, '_tx', IDBTransaction, [\n    'abort'\n  ]);\n\n  function UpgradeDB(db, oldVersion, transaction) {\n    this._db = db;\n    this.oldVersion = oldVersion;\n    this.transaction = new Transaction(transaction);\n  }\n\n  UpgradeDB.prototype.createObjectStore = function() {\n    return new ObjectStore(this._db.createObjectStore.apply(this._db, arguments));\n  };\n\n  proxyProperties(UpgradeDB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(UpgradeDB, '_db', IDBDatabase, [\n    'deleteObjectStore',\n    'close'\n  ]);\n\n  function DB(db) {\n    this._db = db;\n  }\n\n  DB.prototype.transaction = function() {\n    return new Transaction(this._db.transaction.apply(this._db, arguments));\n  };\n\n  proxyProperties(DB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(DB, '_db', IDBDatabase, [\n    'close'\n  ]);\n\n  // Add cursor iterators\n  // TODO: remove this once browsers do the right thing with promises\n  ['openCursor', 'openKeyCursor'].forEach(function(funcName) {\n    [ObjectStore, Index].forEach(function(Constructor) {\n      Constructor.prototype[funcName.replace('open', 'iterate')] = function() {\n        var args = toArray(arguments);\n        var callback = args[args.length - 1];\n        var nativeObject = this._store || this._index;\n        var request = nativeObject[funcName].apply(nativeObject, args.slice(0, -1));\n        request.onsuccess = function() {\n          callback(request.result);\n        };\n      };\n    });\n  });\n\n  // polyfill getAll\n  [Index, ObjectStore].forEach(function(Constructor) {\n    if (Constructor.prototype.getAll) return;\n    Constructor.prototype.getAll = function(query, count) {\n      var instance = this;\n      var items = [];\n\n      return new Promise(function(resolve) {\n        instance.iterateCursor(query, function(cursor) {\n          if (!cursor) {\n            resolve(items);\n            return;\n          }\n          items.push(cursor.value);\n\n          if (count !== undefined && items.length == count) {\n            resolve(items);\n            return;\n          }\n          cursor.continue();\n        });\n      });\n    };\n  });\n\n  var exp = {\n    open: function(name, version, upgradeCallback) {\n      var p = promisifyRequestCall(indexedDB, 'open', [name, version]);\n      var request = p.request;\n\n      request.onupgradeneeded = function(event) {\n        if (upgradeCallback) {\n          upgradeCallback(new UpgradeDB(request.result, event.oldVersion, request.transaction));\n        }\n      };\n\n      return p.then(function(db) {\n        return new DB(db);\n      });\n    },\n    delete: function(name) {\n      return promisifyRequestCall(indexedDB, 'deleteDatabase', [name]);\n    }\n  };\n\n  if (typeof module !== 'undefined') {\n    module.exports = exp;\n    module.exports.default = module.exports;\n  }\n  else {\n    self.idb = exp;\n  }\n}());\n","const ImageInfo = require('./images');\r\nconst idb = require('idb');\r\n/**\r\n * Common database helper functions.\r\n */\r\nclass DBHelper {\r\n\r\n  /**\r\n   * Database URL.\r\n   * Change this to restaurants.json file location on your server.\r\n   */\r\n  static get DATABASE_URL() {\r\n    const port = '@@server_port' // Change this to your server port\r\n    return `http://localhost:${port}/restaurants`;\r\n  }\r\n\r\n  static initIndexedDB() {\r\n    this.dbPromise = idb.open('restaurant-db', 1, function (upgradeDb) {\r\n      switch (upgradeDb.oldVersion) {\r\n        case 0:\r\n        case 1:\r\n          const restaurantStore = upgradeDb.createObjectStore('restaurants', {\r\n            keyPath: 'id'\r\n          });\r\n          restaurantStore.createIndex('photographs', 'photograph');\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Fetch all restaurants.\r\n   */\r\n  static fetchRestaurants(callback) {\r\n    var self = this;\r\n\r\n    DBHelper.fetchRestaurantsFromStorage().then((restaurants) => {\r\n      callback(null, restaurants);\r\n    });\r\n\r\n    let xhr = new XMLHttpRequest();\r\n    xhr.open('GET', DBHelper.DATABASE_URL);\r\n    xhr.onload = () => {\r\n      if (xhr.status === 200) { // Got a success response from server!\r\n        const restaurants = JSON.parse(xhr.responseText);\r\n        const imageData = ImageInfo.ImageInfoData;\r\n        restaurants.map(function (restaurant) {\r\n          if (restaurant.photograph) {\r\n            restaurant.alt = imageData[restaurant.photograph].alt;\r\n            restaurant.caption = imageData[restaurant.photograph].caption;\r\n          }\r\n          self.dbPromise.then(function (db) {\r\n            var tx = db.transaction('restaurants', 'readwrite');\r\n            var restaurantStore = tx.objectStore('restaurants');\r\n            return restaurantStore.put(restaurant);\r\n          });\r\n          return restaurant;\r\n        });\r\n        callback(null, restaurants);\r\n      } else { // Oops!. Got an error from server.\r\n        this.dbPromise.then(() => {\r\n          return DBHelper.fetchRestaurantsFromStorage()\r\n        }).then(function (restaurants) {\r\n          callback(null, restaurants);\r\n        }).catch(function () {\r\n          const error = (`Request failed.`);\r\n          callback(error, null);\r\n        });\r\n      }\r\n    };\r\n    xhr.onerror = function () {\r\n      DBHelper.fetchRestaurantsFromStorage().then((restaurants) => {\r\n        callback(null, restaurants);\r\n      });\r\n    }\r\n    xhr.send();\r\n  }\r\n\r\n  /**\r\n   * Fetch restaurants from indecedDB\r\n   */\r\n  static fetchRestaurantsFromStorage() {\r\n    return this.dbPromise.then(function (db) {\r\n      var tx = db.transaction('restaurants');\r\n      var restaurantsStore = tx.objectStore('restaurants');\r\n      return restaurantsStore.getAll();\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Fetch restaurant by Id from indecedDB\r\n   */\r\n  static fetchRestaurantFromStorage(id) {\r\n    return this.dbPromise.then(function (db) {\r\n      var tx = db.transaction('restaurants');\r\n      var restaurantsStore = tx.objectStore('restaurants');\r\n      return restaurantsStore.get(parseInt(id));\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Fetch a restaurant by its ID.\r\n   */\r\n  static fetchRestaurantById(id, callback) {\r\n    var self = this;\r\n\r\n    let xhr = new XMLHttpRequest();\r\n    xhr.open('GET', DBHelper.DATABASE_URL + '/' + id);\r\n    xhr.onload = () => {\r\n      if (xhr.status === 200) { // Got a success response from server!\r\n        const restaurant = JSON.parse(xhr.responseText);\r\n        if (restaurant.photograph) {\r\n          const imageData = ImageInfo.ImageInfoData;\r\n          restaurant.alt = imageData[restaurant.photograph].alt;\r\n          restaurant.caption = imageData[restaurant.photograph].caption;\r\n        }\r\n        self.dbPromise.then(function (db) {\r\n          var tx = db.transaction('restaurants', 'readwrite');\r\n          var restaurantStore = tx.objectStore('restaurants');\r\n          return restaurantStore.put(restaurant);\r\n        })\r\n        callback(null, restaurant);\r\n      } else { // Oops!. Got an error from server.\r\n        this.dbPromise.then(() => {\r\n          return DBHelper.fetchRestaurantFromStorage(id)\r\n        }).then(function (restaurant) {\r\n          callback(null, restaurant);\r\n        }).catch(function () {\r\n          const error = (`Request failed.`);\r\n          callback(error, null);\r\n        });\r\n      }\r\n    };\r\n    xhr.onerror = function () {\r\n      DBHelper.fetchRestaurantFromStorage(id).then(function (restaurant) {\r\n        callback(null, restaurant);\r\n      });\r\n    }\r\n    xhr.send();\r\n  }\r\n\r\n  /**\r\n   * Fetch restaurants by a cuisine type with proper error handling.\r\n   */\r\n  static fetchRestaurantByCuisine(cuisine, callback) {\r\n    // Fetch all restaurants  with proper error handling\r\n    DBHelper.fetchRestaurants((error, restaurants) => {\r\n      if (error) {\r\n        callback(error, null);\r\n      } else {\r\n        // Filter restaurants to have only given cuisine type\r\n        const results = restaurants.filter(r => r.cuisine_type == cuisine);\r\n        callback(null, results);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Fetch restaurants by a neighborhood with proper error handling.\r\n   */\r\n  static fetchRestaurantByNeighborhood(neighborhood, callback) {\r\n    // Fetch all restaurants\r\n    DBHelper.fetchRestaurants((error, restaurants) => {\r\n      if (error) {\r\n        callback(error, null);\r\n      } else {\r\n        // Filter restaurants to have only given neighborhood\r\n        const results = restaurants.filter(r => r.neighborhood == neighborhood);\r\n        callback(null, results);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Fetch restaurants by a cuisine and a neighborhood with proper error handling.\r\n   */\r\n  static fetchRestaurantByCuisineAndNeighborhood(cuisine, neighborhood, callback) {\r\n    // Fetch all restaurants\r\n    DBHelper.fetchRestaurants((error, restaurants) => {\r\n      if (error) {\r\n        callback(error, null);\r\n      } else {\r\n        let results = restaurants\r\n        if (cuisine != 'all') { // filter by cuisine\r\n          results = results.filter(r => r.cuisine_type == cuisine);\r\n        }\r\n        if (neighborhood != 'all') { // filter by neighborhood\r\n          results = results.filter(r => r.neighborhood == neighborhood);\r\n        }\r\n        callback(null, results);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Fetch all neighborhoods with proper error handling.\r\n   */\r\n  static fetchNeighborhoods(callback) {\r\n    // Fetch all restaurants\r\n    DBHelper.fetchRestaurants((error, restaurants) => {\r\n      if (error) {\r\n        callback(error, null);\r\n      } else {\r\n        // Get all neighborhoods from all restaurants\r\n        const neighborhoods = restaurants.map((v, i) => restaurants[i].neighborhood)\r\n        // Remove duplicates from neighborhoods\r\n        const uniqueNeighborhoods = neighborhoods.filter((v, i) => neighborhoods.indexOf(v) == i)\r\n        callback(null, uniqueNeighborhoods);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Fetch all cuisines with proper error handling.\r\n   */\r\n  static fetchCuisines(callback) {\r\n    // Fetch all restaurants\r\n    DBHelper.fetchRestaurants((error, restaurants) => {\r\n      if (error) {\r\n        callback(error, null);\r\n      } else {\r\n        // Get all cuisines from all restaurants\r\n        const cuisines = restaurants.map((v, i) => restaurants[i].cuisine_type)\r\n        // Remove duplicates from cuisines\r\n        const uniqueCuisines = cuisines.filter((v, i) => cuisines.indexOf(v) == i)\r\n        callback(null, uniqueCuisines);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Restaurant page URL.\r\n   */\r\n  static urlForRestaurant(restaurant) {\r\n    return (`./restaurant.html?id=${restaurant.id}`);\r\n  }\r\n\r\n  /**\r\n   * Restaurant image URLs JSON.\r\n   */\r\n  static imageUrlForRestaurant(restaurant) {\r\n    const representationsURLs = DBHelper.imageRepresentationsPaths(restaurant.photograph);\r\n    return representationsURLs;\r\n  }\r\n\r\n  /**\r\n   * Paths for various image representations\r\n   */\r\n  static imageRepresentationsPaths(filename) {\r\n    const [folderName, suffix] = ['./img/', 'jpg'] //,'webp'];\r\n    const large_1x = folderName.concat(filename, '-512_1x', '.', suffix);\r\n    const large_2x = folderName.concat(filename, '-512_2x', '.', suffix);\r\n    const small_1x = folderName.concat(filename, '-380_1x', '.', suffix);\r\n    const small_2x = folderName.concat(filename, '-380_2x', '.', suffix);\r\n\r\n    return {\r\n      large_1x: large_1x,\r\n      large_2x: large_2x,\r\n      small_1x: small_1x,\r\n      small_2x: small_2x\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Map marker for a restaurant.\r\n   */\r\n  static mapMarkerForRestaurant(restaurant, map) {\r\n    const marker = new google.maps.Marker({\r\n      position: restaurant.latlng,\r\n      title: restaurant.name,\r\n      url: DBHelper.urlForRestaurant(restaurant),\r\n      map: map,\r\n      animation: google.maps.Animation.DROP\r\n    });\r\n    return marker;\r\n  }\r\n\r\n}\r\nmodule.exports = DBHelper;","/**\n * Common image info class\n */\nclass ImageInfo {\n\n  static get ImageInfoData() {\n\n    return {\n      1: {\n        \"id\": 1,\n        \"photograph\": \"1\",\n        \"alt\": \"the main restaurant area\",\n        \"caption\": \"Large space with nice decoration\"\n      },\n      2: {\n        \"id\": 2,\n        \"photograph\": \"2\",\n        \"alt\": \"pizza on a plate\",\n        \"caption\": \"Tasty pizzas made every day\"\n      },\n      3: {\n        \"id\": 3,\n        \"photograph\": \"3\",\n        \"alt\": \"the main restaurant area empty\",\n        \"caption\": \"Modern design to enjoy your meals\",\n      },\n      4: {\n        \"id\": 4,\n        \"photograph\": \"4\",\n        \"alt\": \"the entrance of the shop\",\n        \"caption\": \"The corner shop, easy to spot\"\n      },\n      5: {\n        \"id\": 5,\n        \"photograph\": \"5\",\n        \"alt\": \"inside the shop, customers and staff\",\n        \"caption\": \"Meet our friendly staff\"\n      },\n      6: {\n        \"id\": 6,\n        \"photograph\": \"6\",\n        \"alt\": \"the area inside with some people queueing and other eating\",\n        \"caption\": \"Large space for big groups\"\n      },\n      7: {\n        \"id\": 7,\n        \"photograph\": \"7\",\n        \"alt\": \"black and white, the display of the shop with 2 people passing by\",\n        \"caption\": \"Our classic shop, still keeping our values\"\n      },\n      8: {\n        \"id\": 8,\n        \"photograph\": \"8\",\n        \"alt\": \"outdoor display of the corner shop, big label reads 'the Dutch'\",\n        \"caption\": \"Easy to find our beautiful building\",\n      },\n      9: {\n        \"id\": 9,\n        \"photograph\": \"9\",\n        \"caption\": \"Enjoying our home made meals\",\n        \"alt\": \"black and white, people eating in the restaurant\"\n      },\n      10: {\n        \"id\": 10,\n        \"photograph\": \"10\",\n        \"alt\": \"the area inside the shop, the furniture and bar, without people\",\n        \"caption\": \"Modern space, ready to serve your appetite\"\n      }\n    }\n  }\n}\n\nmodule.exports = ImageInfo;","const DBHelper = require('./dbhelper');\n\nlet restaurant;\nvar map;\n\n/**\n * Initialize Google map, called from HTML.\n */\nwindow.initMap = () => {\n  fetchRestaurantFromURL((error, restaurant) => {\n    if (error) { // Got an error!\n      console.error(error);\n    } else {\n      this.map = new google.maps.Map(document.getElementById('map'), {\n        zoom: 16,\n        center: restaurant.latlng,\n        scrollwheel: false\n      });\n      fillBreadcrumb();\n      DBHelper.mapMarkerForRestaurant(this.restaurant, this.map);\n    }\n  });\n}\n\n/**\n * Initialise indexedDB\n */\nDBHelper.initIndexedDB();\n\n\n/**\n * Get current restaurant from page URL.\n */\nfetchRestaurantFromURL = (callback) => {\n  if (this.restaurant) { // restaurant already fetched!\n    callback(null, this.restaurant)\n    return;\n  }\n  const id = getParameterByName('id');\n  if (!id) { // no id found in URL\n    error = 'No restaurant id in URL'\n    callback(error, null);\n  } else {\n    DBHelper.fetchRestaurantById(id, (error, restaurant) => {\n      this.restaurant = restaurant;\n      if (!restaurant) {\n        console.error(error);\n        return;\n      }\n      fillRestaurantHTML();\n      callback(null, restaurant)\n    });\n  }\n}\n\n/**\n * Create restaurant HTML and add it to the webpage\n */\nfillRestaurantHTML = (restaurant = this.restaurant) => {\n  const name = document.getElementById('restaurant-name');\n  name.innerHTML = restaurant.name;\n\n  const address = document.getElementById('restaurant-address');\n  address.innerHTML = restaurant.address;\n\n  if (restaurant.photograph) {\n    const picture = document.getElementById('restaurant-img');\n    picture.className = 'restaurant-img';\n    picture.setAttribute('aria-labelledby', \"fig_\" + restaurant.id);\n    picture.setAttribute('role', 'img');\n\n    const imageRepresentations = DBHelper.imageUrlForRestaurant(restaurant);\n    const sourceSmall = document.createElement('source');\n    sourceSmall.setAttribute('media', '(max-width:700px)')\n    sourceSmall.setAttribute('srcset',\n      imageRepresentations.small_1x\n        .concat(' 1x,')\n        .concat(imageRepresentations.small_2x)\n        .concat(' 2x')\n    );\n    picture.append(sourceSmall);\n\n    const sourceLarge = document.createElement('source');\n    sourceLarge.setAttribute('media', '(min-width:701px)')\n    sourceLarge.setAttribute('srcset',\n      imageRepresentations.large_1x\n        .concat(' 1x,')\n        .concat(imageRepresentations.large_2x)\n        .concat(' 2x')\n    );\n    picture.append(sourceLarge);\n\n    const image = document.createElement('img');\n    image.src = imageRepresentations.small_2x;\n    image.setAttribute('alt', 'restaurant '.concat(restaurant.name, ', ', restaurant.alt));\n    image.className = 'restaurant-img';\n    picture.append(image);\n\n    const figcaption = document.createElement('figcaption');\n    figcaption.setAttribute('id', \"fig_\" + restaurant.id)\n    figcaption.innerHTML = restaurant.caption;\n    picture.append(figcaption);\n  }\n\n  const cuisine = document.getElementById('restaurant-cuisine');\n  cuisine.innerHTML = restaurant.cuisine_type;\n\n  // fill operating hours\n  if (restaurant.operating_hours) {\n    fillRestaurantHoursHTML();\n  }\n  // fill reviews\n  fillReviewsHTML();\n  fillSubmitReviewsHTML();\n}\n\n/**\n * Create restaurant operating hours HTML table and add it to the webpage.\n */\nfillRestaurantHoursHTML = (operatingHours = this.restaurant.operating_hours) => {\n  const hours = document.getElementById('restaurant-hours');\n  for (let key in operatingHours) {\n    const row = document.createElement('tr');\n\n    const day = document.createElement('td');\n    day.innerHTML = key;\n    row.appendChild(day);\n\n    const time = document.createElement('td');\n    time.innerHTML = operatingHours[key];\n    row.appendChild(time);\n\n    hours.appendChild(row);\n  }\n}\n\n/**\n * Create all reviews HTML and add them to the webpage.\n */\nfillReviewsHTML = (reviews = this.restaurant.reviews) => {\n  const container = document.getElementById('reviews-container');\n  const title = document.createElement('h2');\n  title.innerHTML = 'Reviews';\n  container.appendChild(title);\n\n  if (!reviews) {\n    const noReviews = document.createElement('p');\n    noReviews.innerHTML = 'No reviews yet!';\n    container.appendChild(noReviews);\n    return;\n  }\n  const ul = document.getElementById('reviews-list');\n  reviews.forEach(review => {\n    ul.appendChild(createReviewHTML(review));\n  });\n  container.appendChild(ul);\n}\n\n/**\n * Create submit reviews HTML and add them to the webpage.\n */\nfillSubmitReviewsHTML = () => {\n  const container = document.getElementById('reviews-submit-container');\n  const title = document.createElement('h2');\n  title.innerHTML = 'Submit Review';\n  container.appendChild(title);\n\n\n  const username = document.createElement('input');\n  username.setAttribute('type', 'text');\n  username.setAttribute('id', 'username');\n  username.setAttribute('name', 'username');\n  username.setAttribute('placeholder', 'username');\n  container.appendChild(username);\n\n  const rating = document.createElement('input');\n  rating.setAttribute('type', 'number');\n  rating.setAttribute('min', 0);\n  rating.setAttribute('max', 5);\n  rating.setAttribute('id', 'rating');\n  rating.setAttribute('name', 'rating');\n  rating.setAttribute('placeholder', 'username');\n  container.appendChild(rating);\n\n  const comments_area = document.createElement('textarea');\n  comments_area.setAttribute('id', 'comments');\n  comments_area.setAttribute('name', 'comments');\n  container.appendChild(comments_area);\n\n  const submit_btn = document.createElement('button');\n  submit_btn.setAttribute('id', 'submit');\n  submit_btn.innerText = 'submit';\n  container.appendChild(submit_btn);\n\n  const restaurant_id = document.createElement('input');\n  restaurant_id.setAttribute('type', 'hidden');\n  restaurant_id.setAttribute('name', 'id');\n  restaurant_id.setAttribute('value', this.restaurant);\n  container.appendChild(restaurant_id);\n}\n\n/**\n * Create review HTML and add it to the webpage.\n */\ncreateReviewHTML = (review) => {\n  const li = document.createElement('li');\n  const name = document.createElement('p');\n  name.innerHTML = review.name;\n  li.appendChild(name);\n\n  const date = document.createElement('p');\n  date.innerHTML = review.date;\n  li.appendChild(date);\n\n  const rating = document.createElement('p');\n  rating.innerHTML = `Rating: ${review.rating}`;\n  li.appendChild(rating);\n\n  const comments = document.createElement('p');\n  comments.innerHTML = review.comments;\n  li.appendChild(comments);\n\n  return li;\n}\n\n/**\n * Add restaurant name to the breadcrumb navigation menu\n */\nfillBreadcrumb = (restaurant = this.restaurant) => {\n  const breadcrumb = document.getElementById('breadcrumb');\n  const li = document.createElement('li');\n  const a_link = document.createElement('a');\n  a_link.setAttribute('href', '#');\n  a_link.setAttribute('aria-current', 'page');\n  a_link.setAttribute('class', 'current-page')\n  a_link.innerHTML = restaurant.name;\n  li.appendChild(a_link);\n  breadcrumb.appendChild(li);\n}\n\n/**\n * Get a parameter by name from page URL.\n */\ngetParameterByName = (name, url) => {\n  if (!url)\n    url = window.location.href;\n  name = name.replace(/[\\[\\]]/g, '\\\\$&');\n  const regex = new RegExp(`[?&]${name}(=([^&#]*)|&|#|$)`),\n    results = regex.exec(url);\n  if (!results)\n    return null;\n  if (!results[2])\n    return '';\n  return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n}"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJub2RlX21vZHVsZXMvaWRiL2xpYi9pZGIuanMiLCJzcmMvanMvZGJoZWxwZXIuanMiLCJzcmMvanMvaW1hZ2VzLmpzIiwic3JjL2pzL3Jlc3RhdXJhbnRfaW5mby5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQ0FBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUN2VEEsTUFBTSxZQUFZLFFBQVEsVUFBUixDQUFsQjtBQUNBLE1BQU0sTUFBTSxR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QixLQUFuQixFQUEwQixHQUExQixDQUFuQixDQUFQO0FBQ0QsQ0FYRCIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uIGUodCxuLHIpe2Z1bmN0aW9uIHMobyx1KXtpZighbltvXSl7aWYoIXRbb10pe3ZhciBhPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7aWYoIXUmJmEpcmV0dXJuIGEobywhMCk7aWYoaSlyZXR1cm4gaShvLCEwKTt2YXIgZj1uZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBtb2R1bGUgJ1wiK28rXCInXCIpO3Rocm93IGYuY29kZT1cIk1PRFVMRV9OT1RfRk9VTkRcIixmfXZhciBsPW5bb109e2V4cG9ydHM6e319O3Rbb11bMF0uY2FsbChsLmV4cG9ydHMsZnVuY3Rpb24oZSl7dmFyIG49dFtvXVsxXVtlXTtyZXR1cm4gcyhuP246ZSl9LGwsbC5leHBvcnRzLGUsdCxuLHIpfXJldHVybiBuW29dLmV4cG9ydHN9dmFyIGk9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtmb3IodmFyIG89MDtvPHIubGVuZ3RoO28rKylzKHJbb10pO3JldHVybiBzfSkiLCIndXNlIHN0cmljdCc7XG5cbihmdW5jdGlvbigpIHtcbiAgZnVuY3Rpb24gdG9BcnJheShhcnIpIHtcbiAgICByZXR1cm4gQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJyKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHByb21pc2lmeVJlcXVlc3QocmVxdWVzdCkge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbihyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgIHJlcXVlc3Qub25zdWNjZXNzID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIHJlc29sdmUocmVxdWVzdC5yZXN1bHQpO1xuICAgICAgfTtcblxuICAgICAgcmVxdWVzdC5vbmVycm9yID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIHJlamVjdChyZXF1ZXN0LmVycm9yKTtcbiAgICAgIH07XG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiBwcm9taXNpZnlSZXF1ZXN0Q2FsbChvYmosIG1ldGhvZCwgYXJncykge1xuICAgIHZhciByZXF1ZXN0O1xuICAgIHZhciBwID0gbmV3IFByb21pc2UoZnVuY3Rpb24ocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICByZXF1ZXN0ID0gb2JqW21ldGhvZF0uYXBwbHkob2JqLCBhcmdzKTtcbiAgICAgIHByb21pc2lmeVJlcXVlc3QocmVxdWVzdCkudGhlbihyZXNvbHZlLCByZWplY3QpO1xuICAgIH0pO1xuXG4gICAgcC5yZXF1ZXN0ID0gcmVxdWVzdDtcbiAgICByZXR1cm4gcDtcbiAgfVxuXG4gIGZ1bmN0aW9uIHByb21pc2lmeUN1cnNvclJlcXVlc3RDYWxsKG9iaiwgbWV0aG9kLCBhcmdzKSB7XG4gICAgdmFyIHAgPSBwcm9taXNpZnlSZXF1ZXN0Q2FsbChvYmosIG1ldGhvZCwgYXJncyk7XG4gICAgcmV0dXJuIHAudGhlbihmdW5jdGlvbih2YWx1ZSkge1xuICAgICAgaWYgKCF2YWx1ZSkgcmV0dXJuO1xuICAgICAgcmV0dXJuIG5ldyBDdXJzb3IodmFsdWUsIHAucmVxdWVzdCk7XG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiBwcm94eVByb3BlcnRpZXMoUHJveHlDbGFzcywgdGFyZ2V0UHJvcCwgcHJvcGVydGllcykge1xuICAgIHByb3BlcnRpZXMuZm9yRWFjaChmdW5jdGlvbihwcm9wKSB7XG4gICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoUHJveHlDbGFzcy5wcm90b3R5cGUsIHByb3AsIHtcbiAgICAgICAgZ2V0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgICByZXR1cm4gdGhpc1t0YXJnZXRQcm9wXVtwcm9wXTtcbiAgICAgICAgfSxcbiAgICAgICAgc2V0OiBmdW5jdGlvbih2YWwpIHtcbiAgICAgICAgICB0aGlzW3RhcmdldFByb3BdW3Byb3BdID0gdmFsO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHByb3h5UmVxdWVzdE1ldGhvZHMoUHJveHlDbGFzcywgdGFyZ2V0UHJvcCwgQ29uc3RydWN0b3IsIHByb3BlcnRpZXMpIHtcbiAgICBwcm9wZXJ0aWVzLmZvckVhY2goZnVuY3Rpb24ocHJvcCkge1xuICAgICAgaWYgKCEocHJvcCBpbiBDb25zdHJ1Y3Rvci5wcm90b3R5cGUpKSByZXR1cm47XG4gICAgICBQcm94eUNsYXNzLnByb3RvdHlwZVtwcm9wXSA9IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gcHJvbWlzaWZ5UmVxdWVzdENhbGwodGhpc1t0YXJnZXRQcm9wXSwgcHJvcCwgYXJndW1lbnRzKTtcbiAgICAgIH07XG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiBwcm94eU1ldGhvZHMoUHJveHlDbGFzcywgdGFyZ2V0UHJvcCwgQ29uc3RydWN0b3IsIHByb3BlcnRpZXMpIHtcbiAgICBwcm9wZXJ0aWVzLmZvckVhY2goZnVuY3Rpb24ocHJvcCkge1xuICAgICAgaWYgKCEocHJvcCBpbiBDb25zdHJ1Y3Rvci5wcm90b3R5cGUpKSByZXR1cm47XG4gICAgICBQcm94eUNsYXNzLnByb3RvdHlwZVtwcm9wXSA9IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gdGhpc1t0YXJnZXRQcm9wXVtwcm9wXS5hcHBseSh0aGlzW3RhcmdldFByb3BdLCBhcmd1bWVudHMpO1xuICAgICAgfTtcbiAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHByb3h5Q3Vyc29yUmVxdWVzdE1ldGhvZHMoUHJveHlDbGFzcywgdGFyZ2V0UHJvcCwgQ29uc3RydWN0b3IsIHByb3BlcnRpZXMpIHtcbiAgICBwcm9wZXJ0aWVzLmZvckVhY2goZnVuY3Rpb24ocHJvcCkge1xuICAgICAgaWYgKCEocHJvcCBpbiBDb25zdHJ1Y3Rvci5wcm90b3R5cGUpKSByZXR1cm47XG4gICAgICBQcm94eUNsYXNzLnByb3RvdHlwZVtwcm9wXSA9IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gcHJvbWlzaWZ5Q3Vyc29yUmVxdWVzdENhbGwodGhpc1t0YXJnZXRQcm9wXSwgcHJvcCwgYXJndW1lbnRzKTtcbiAgICAgIH07XG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiBJbmRleChpbmRleCkge1xuICAgIHRoaXMuX2luZGV4ID0gaW5kZXg7XG4gIH1cblxuICBwcm94eVByb3BlcnRpZXMoSW5kZXgsICdfaW5kZXgnLCBbXG4gICAgJ25hbWUnLFxuICAgICdrZXlQYXRoJyxcbiAgICAnbXVsdGlFbnRyeScsXG4gICAgJ3VuaXF1ZSdcbiAgXSk7XG5cbiAgcHJveHlSZXF1ZXN0TWV0aG9kcyhJbmRleCwgJ19pbmRleCcsIElEQkluZGV4LCBbXG4gICAgJ2dldCcsXG4gICAgJ2dldEtleScsXG4gICAgJ2dldEFsbCcsXG4gICAgJ2dldEFsbEtleXMnLFxuICAgICdjb3VudCdcbiAgXSk7XG5cbiAgcHJveHlDdXJzb3JSZXF1ZXN0TWV0aG9kcyhJbmRleCwgJ19pbmRleCcsIElEQkluZGV4LCBbXG4gICAgJ29wZW5DdXJzb3InLFxuICAgICdvcGVuS2V5Q3Vyc29yJ1xuICBdKTtcblxuICBmdW5jdGlvbiBDdXJzb3IoY3Vyc29yLCByZXF1ZXN0KSB7XG4gICAgdGhpcy5fY3Vyc29yID0gY3Vyc29yO1xuICAgIHRoaXMuX3JlcXVlc3QgPSByZXF1ZXN0O1xuICB9XG5cbiAgcHJveHlQcm9wZXJ0aWVzKEN1cnNvciwgJ19jdXJzb3InLCBbXG4gICAgJ2RpcmVjdGlvbicsXG4gICAgJ2tleScsXG4gICAgJ3ByaW1hcnlLZXknLFxuICAgICd2YWx1ZSdcbiAgXSk7XG5cbiAgcHJveHlSZXF1ZXN0TWV0aG9kcyhDdXJzb3IsICdfY3Vyc29yJywgSURCQ3Vyc29yLCBbXG4gICAgJ3VwZGF0ZScsXG4gICAgJ2RlbGV0ZSdcbiAgXSk7XG5cbiAgLy8gcHJveHkgJ25leHQnIG1ldGhvZHNcbiAgWydhZHZhbmNlJywgJ2NvbnRpbnVlJywgJ2NvbnRpbnVlUHJpbWFyeUtleSddLmZvckVhY2goZnVuY3Rpb24obWV0aG9kTmFtZSkge1xuICAgIGlmICghKG1ldGhvZE5hbWUgaW4gSURCQ3Vyc29yLnByb3RvdHlwZSkpIHJldHVybjtcbiAgICBDdXJzb3IucHJvdG90eXBlW21ldGhvZE5hbWVdID0gZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgY3Vyc29yID0gdGhpcztcbiAgICAgIHZhciBhcmdzID0gYXJndW1lbnRzO1xuICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSgpLnRoZW4oZnVuY3Rpb24oKSB7XG4gICAgICAgIGN1cnNvci5fY3Vyc29yW21ldGhvZE5hbWVdLmFwcGx5KGN1cnNvci5fY3Vyc29yLCBhcmdzKTtcbiAgICAgICAgcmV0dXJuIHByb21pc2lmeVJlcXVlc3QoY3Vyc29yLl9yZXF1ZXN0KS50aGVuKGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgICAgICAgaWYgKCF2YWx1ZSkgcmV0dXJuO1xuICAgICAgICAgIHJldHVybiBuZXcgQ3Vyc29yKHZhbHVlLCBjdXJzb3IuX3JlcXVlc3QpO1xuICAgICAgICB9KTtcbiAgICAgIH0pO1xuICAgIH07XG4gIH0pO1xuXG4gIGZ1bmN0aW9uIE9iamVjdFN0b3JlKHN0b3JlKSB7XG4gICAgdGhpcy5fc3RvcmUgPSBzdG9yZTtcbiAgfVxuXG4gIE9iamVjdFN0b3JlLnByb3RvdHlwZS5jcmVhdGVJbmRleCA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBuZXcgSW5kZXgodGhpcy5fc3RvcmUuY3JlYXRlSW5kZXguYXBwbHkodGhpcy5fc3RvcmUsIGFyZ3VtZW50cykpO1xuICB9O1xuXG4gIE9iamVjdFN0b3JlLnByb3RvdHlwZS5pbmRleCA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBuZXcgSW5kZXgodGhpcy5fc3RvcmUuaW5kZXguYXBwbHkodGhpcy5fc3RvcmUsIGFyZ3VtZW50cykpO1xuICB9O1xuXG4gIHByb3h5UHJvcGVydGllcyhPYmplY3RTdG9yZSwgJ19zdG9yZScsIFtcbiAgICAnbmFtZScsXG4gICAgJ2tleVBhdGgnLFxuICAgICdpbmRleE5hbWVzJyxcbiAgICAnYXV0b0luY3JlbWVudCdcbiAgXSk7XG5cbiAgcHJveHlSZXF1ZXN0TWV0aG9kcyhPYmplY3RTdG9yZSwgJ19zdG9yZScsIElEQk9iamVjdFN0b3JlLCBbXG4gICAgJ3B1dCcsXG4gICAgJ2FkZCcsXG4gICAgJ2RlbGV0ZScsXG4gICAgJ2NsZWFyJyxcbiAgICAnZ2V0JyxcbiAgICAnZ2V0QWxsJyxcbiAgICAnZ2V0S2V5JyxcbiAgICAnZ2V0QWxsS2V5cycsXG4gICAgJ2NvdW50J1xuICBdKTtcblxuICBwcm94eUN1cnNvclJlcXVlc3RNZXRob2RzKE9iamVjdFN0b3JlLCAnX3N0b3JlJywgSURCT2JqZWN0U3RvcmUsIFtcbiAgICAnb3BlbkN1cnNvcicsXG4gICAgJ29wZW5LZXlDdXJzb3InXG4gIF0pO1xuXG4gIHByb3h5TWV0aG9kcyhPYmplY3RTdG9yZSwgJ19zdG9yZScsIElEQk9iamVjdFN0b3JlLCBbXG4gICAgJ2RlbGV0ZUluZGV4J1xuICBdKTtcblxuICBmdW5jdGlvbiBUcmFuc2FjdGlvbihpZGJUcmFuc2FjdGlvbikge1xuICAgIHRoaXMuX3R4ID0gaWRiVHJhbnNhY3Rpb247XG4gICAgdGhpcy5jb21wbGV0ZSA9IG5ldyBQcm9taXNlKGZ1bmN0aW9uKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgaWRiVHJhbnNhY3Rpb24ub25jb21wbGV0ZSA9IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXNvbHZlKCk7XG4gICAgICB9O1xuICAgICAgaWRiVHJhbnNhY3Rpb24ub25lcnJvciA9IGZ1bmN0aW9uKCkge1xuICAgICAgICByZWplY3QoaWRiVHJhbnNhY3Rpb24uZXJyb3IpO1xuICAgICAgfTtcbiAgICAgIGlkYlRyYW5zYWN0aW9uLm9uYWJvcnQgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgcmVqZWN0KGlkYlRyYW5zYWN0aW9uLmVycm9yKTtcbiAgICAgIH07XG4gICAgfSk7XG4gIH1cblxuICBUcmFuc2FjdGlvbi5wcm90b3R5cGUub2JqZWN0U3RvcmUgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gbmV3IE9iamVjdFN0b3JlKHRoaXMuX3R4Lm9iamVjdFN0b3JlLmFwcGx5KHRoaXMuX3R4LCBhcmd1bWVudHMpKTtcbiAgfTtcblxuICBwcm94eVByb3BlcnRpZXMoVHJhbnNhY3Rpb24sICdfdHgnLCBbXG4gICAgJ29iamVjdFN0b3JlTmFtZXMnLFxuICAgICdtb2RlJ1xuICBdKTtcblxuICBwcm94eU1ldGhvZHMoVHJhbnNhY3Rpb24sICdfdHgnLCBJREJUcmFuc2FjdGlvbiwgW1xuICAgICdhYm9ydCdcbiAgXSk7XG5cbiAgZnVuY3Rpb24gVXBncmFkZURCKGRiLCBvbGRWZXJzaW9uLCB0cmFuc2FjdGlvbikge1xuICAgIHRoaXMuX2RiID0gZGI7XG4gICAgdGhpcy5vbGRWZXJzaW9uID0gb2xkVmVyc2lvbjtcbiAgICB0aGlzLnRyYW5zYWN0aW9uID0gbmV3IFRyYW5zYWN0aW9uKHRyYW5zYWN0aW9uKTtcbiAgfVxuXG4gIFVwZ3JhZGVEQi5wcm90b3R5cGUuY3JlYXRlT2JqZWN0U3RvcmUgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gbmV3IE9iamVjdFN0b3JlKHRoaXMuX2RiLmNyZWF0ZU9iamVjdFN0b3JlLmFwcGx5KHRoaXMuX2RiLCBhcmd1bWVudHMpKTtcbiAgfTtcblxuICBwcm94eVByb3BlcnRpZXMoVXBncmFkZURCLCAnX2RiJywgW1xuICAgICduYW1lJyxcbiAgICAndmVyc2lvbicsXG4gICAgJ29iamVjdFN0b3JlTmFtZXMnXG4gIF0pO1xuXG4gIHByb3h5TWV0aG9kcyhVcGdyYWRlREIsICdfZGInLCBJREJEYXRhYmFzZSwgW1xuICAgICdkZWxldGVPYmplY3RTdG9yZScsXG4gICAgJ2Nsb3NlJ1xuICBdKTtcblxuICBmdW5jdGlvbiBEQihkYikge1xuICAgIHRoaXMuX2RiID0gZGI7XG4gIH1cblxuICBEQi5wcm90b3R5cGUudHJhbnNhY3Rpb24gPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gbmV3IFRyYW5zYWN0aW9uKHRoaXMuX2RiLnRyYW5zYWN0aW9uLmFwcGx5KHRoaXMuX2RiLCBhcmd1bWVudHMpKTtcbiAgfTtcblxuICBwcm94eVByb3BlcnRpZXMoREIsICdfZGInLCBbXG4gICAgJ25hbWUnLFxuICAgICd2ZXJzaW9uJyxcbiAgICAnb2JqZWN0U3RvcmVOYW1lcydcbiAgXSk7XG5cbiAgcHJveHlNZXRob2RzKERCLCAnX2RiJywgSURCRGF0YWJhc2UsIFtcbiAgICAnY2xvc2UnXG4gIF0pO1xuXG4gIC8vIEFkZCBjdXJzb3IgaXRlcmF0b3JzXG4gIC8vIFRPRE86IHJlbW92ZSB0aGlzIG9uY2UgYnJvd3NlcnMgZG8gdGhlIHJpZ2h0IHRoaW5nIHdpdGggcHJvbWlzZXNcbiAgWydvcGVuQ3Vyc29yJywgJ29wZW5LZXlDdXJzb3InXS5mb3JFYWNoKGZ1bmN0aW9uKGZ1bmNOYW1lKSB7XG4gICAgW09iamVjdFN0b3JlLCBJbmRleF0uZm9yRWFjaChmdW5jdGlvbihDb25zdHJ1Y3Rvcikge1xuICAgICAgQ29uc3RydWN0b3IucHJvdG90eXBlW2Z1bmNOYW1lLnJlcGxhY2UoJ29wZW4nLCAnaXRlcmF0ZScpXSA9IGZ1bmN0aW9uKCkge1xuICAgICAgICB2YXIgYXJncyA9IHRvQXJyYXkoYXJndW1lbnRzKTtcbiAgICAgICAgdmFyIGNhbGxiYWNrID0gYXJnc1thcmdzLmxlbmd0aCAtIDFdO1xuICAgICAgICB2YXIgbmF0aXZlT2JqZWN0ID0gdGhpcy5fc3RvcmUgfHwgdGhpcy5faW5kZXg7XG4gICAgICAgIHZhciByZXF1ZXN0ID0gbmF0aXZlT2JqZWN0W2Z1bmNOYW1lXS5hcHBseShuYXRpdmVPYmplY3QsIGFyZ3Muc2xpY2UoMCwgLTEpKTtcbiAgICAgICAgcmVxdWVzdC5vbnN1Y2Nlc3MgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICBjYWxsYmFjayhyZXF1ZXN0LnJlc3VsdCk7XG4gICAgICAgIH07XG4gICAgICB9O1xuICAgIH0pO1xuICB9KTtcblxuICAvLyBwb2x5ZmlsbCBnZXRBbGxcbiAgW0luZGV4LCBPYmplY3RTdG9yZV0uZm9yRWFjaChmdW5jdGlvbihDb25zdHJ1Y3Rvcikge1xuICAgIGlmIChDb25zdHJ1Y3Rvci5wcm90b3R5cGUuZ2V0QWxsKSByZXR1cm47XG4gICAgQ29uc3RydWN0b3IucHJvdG90eXBlLmdldEFsbCA9IGZ1bmN0aW9uKHF1ZXJ5LCBjb3VudCkge1xuICAgICAgdmFyIGluc3RhbmNlID0gdGhpcztcbiAgICAgIHZhciBpdGVtcyA9IFtdO1xuXG4gICAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24ocmVzb2x2ZSkge1xuICAgICAgICBpbnN0YW5jZS5pdGVyYXRlQ3Vyc29yKHF1ZXJ5LCBmdW5jdGlvbihjdXJzb3IpIHtcbiAgICAgICAgICBpZiAoIWN1cnNvcikge1xuICAgICAgICAgICAgcmVzb2x2ZShpdGVtcyk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgfVxuICAgICAgICAgIGl0ZW1zLnB1c2goY3Vyc29yLnZhbHVlKTtcblxuICAgICAgICAgIGlmIChjb3VudCAhPT0gdW5kZWZpbmVkICYmIGl0ZW1zLmxlbmd0aCA9PSBjb3VudCkge1xuICAgICAgICAgICAgcmVzb2x2ZShpdGVtcyk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgfVxuICAgICAgICAgIGN1cnNvci5jb250aW51ZSgpO1xuICAgICAgICB9KTtcbiAgICAgIH0pO1xuICAgIH07XG4gIH0pO1xuXG4gIHZhciBleHAgPSB7XG4gICAgb3BlbjogZnVuY3Rpb24obmFtZSwgdmVyc2lvbiwgdXBncmFkZUNhbGxiYWNrKSB7XG4gICAgICB2YXIgcCA9IHByb21pc2lmeVJlcXVlc3RDYWxsKGluZGV4ZWREQiwgJ29wZW4nLCBbbmFtZSwgdmVyc2lvbl0pO1xuICAgICAgdmFyIHJlcXVlc3QgPSBwLnJlcXVlc3Q7XG5cbiAgICAgIHJlcXVlc3Qub251cGdyYWRlbmVlZGVkID0gZnVuY3Rpb24oZXZlbnQpIHtcbiAgICAgICAgaWYgKHVwZ3JhZGVDYWxsYmFjaykge1xuICAgICAgICAgIHVwZ3JhZGVDYWxsYmFjayhuZXcgVXBncmFkZURCKHJlcXVlc3QucmVzdWx0LCBldmVudC5vbGRWZXJzaW9uLCByZXF1ZXN0LnRyYW5zYWN0aW9uKSk7XG4gICAgICAgIH1cbiAgICAgIH07XG5cbiAgICAgIHJldHVybiBwLnRoZW4oZnVuY3Rpb24oZGIpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBEQihkYik7XG4gICAgICB9KTtcbiAgICB9LFxuICAgIGRlbGV0ZTogZnVuY3Rpb24obmFtZSkge1xuICAgICAgcmV0dXJuIHByb21pc2lmeVJlcXVlc3RDYWxsKGluZGV4ZWREQiwgJ2RlbGV0ZURhdGFiYXNlJywgW25hbWVdKTtcbiAgICB9XG4gIH07XG5cbiAgaWYgKHR5cGVvZiBtb2R1bGUgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgbW9kdWxlLmV4cG9ydHMgPSBleHA7XG4gICAgbW9kdWxlLmV4cG9ydHMuZGVmYXVsdCA9IG1vZHVsZS5leHBvcnRzO1xuICB9XG4gIGVsc2Uge1xuICAgIHNlbGYuaWRiID0gZXhwO1xuICB9XG59KCkpO1xuIiwiY29uc3QgSW1hZ2VJbmZvID0gcmVxdWlyZSgnLi9pbWFnZXMnKTtcclxuY29uc3QgaWRiID0gcmVxdWlyZSgnaWRiJyk7XHJcbi8qKlxyXG4gKiBDb21tb24gZGF0YWJhc2UgaGVscGVyIGZ1bmN0aW9ucy5cclxuICovXHJcbmNsYXNzIERCSGVscGVyIHtcclxuXHJcbiAgLyoqXHJcbiAgICogRGF0YWJhc2UgVVJMLlxyXG4gICAqIENoYW5nZSB0aGlzIHRvIHJlc3RhdXJhbnRzLmpzb24gZmlsZSBsb2NhdGlvbiBvbiB5b3VyIHNlcnZlci5cclxuICAgKi9cclxuICBzdGF0aWMgZ2V0IERBVEFCQVNFX1VSTCgpIHtcclxuICAgIGNvbnN0IHBvcnQgPSAnQEBzZXJ2ZXJfcG9ydCcgLy8gQ2hhbmdlIHRoaXMgdG8geW91ciBzZXJ2ZXIgcG9ydFxyXG4gICAgcmV0dXJuIGBodHRwOi8vbG9jYWxob3N0OiR7cG9ydH0vcmVzdGF1cmFudHNgO1xyXG4gIH1cclxuXHJcbiAgc3RhdGljIGluaXRJbmRleGVkREIoKSB7XHJcbiAgICB0aGlzLmRiUHJvbWlzZSA9IGlkYi5vcGVuKCdyZXN0YXVyYW50LWRiJywgMSwgZnVuY3Rpb24gKHVwZ3JhZGVEYikge1xyXG4gICAgICBzd2l0Y2ggKHVwZ3JhZGVEYi5vbGRWZXJzaW9uKSB7XHJcbiAgICAgICAgY2FzZSAwOlxyXG4gICAgICAgIGNhc2UgMTpcclxuICAgICAgICAgIGNvbnN0IHJlc3RhdXJhbnRTdG9yZSA9IHVwZ3JhZGVEYi5jcmVhdGVPYmplY3RTdG9yZSgncmVzdGF1cmFudHMnLCB7XHJcbiAgICAgICAgICAgIGtleVBhdGg6ICdpZCdcclxuICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgcmVzdGF1cmFudFN0b3JlLmNyZWF0ZUluZGV4KCdwaG90b2dyYXBocycsICdwaG90b2dyYXBoJyk7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogRmV0Y2ggYWxsIHJlc3RhdXJhbnRzLlxyXG4gICAqL1xyXG4gIHN0YXRpYyBmZXRjaFJlc3RhdXJhbnRzKGNhbGxiYWNrKSB7XHJcbiAgICB2YXIgc2VsZiA9IHRoaXM7XHJcblxyXG4gICAgREJIZWxwZXIuZmV0Y2hSZXN0YXVyYW50c0Zyb21TdG9yYWdlKCkudGhlbigocmVzdGF1cmFudHMpID0+IHtcclxuICAgICAgY2FsbGJhY2sobnVsbCwgcmVzdGF1cmFudHMpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgbGV0IHhociA9IG5ldyBYTUxIdHRwUmVxdWVzdCgpO1xyXG4gICAgeGhyLm9wZW4oJ0dFVCcsIERCSGVscGVyLkRBVEFCQVNFX1VSTCk7XHJcbiAgICB4aHIub25sb2FkID0gKCkgPT4ge1xyXG4gICAgICBpZiAoeGhyLnN0YXR1cyA9PT0gMjAwKSB7IC8vIEdvdCBhIHN1Y2Nlc3MgcmVzcG9uc2UgZnJvbSBzZXJ2ZXIhXHJcbiAgICAgICAgY29uc3QgcmVzdGF1cmFudHMgPSBKU09OLnBhcnNlKHhoci5yZXNwb25zZVRleHQpO1xyXG4gICAgICAgIGNvbnN0IGltYWdlRGF0YSA9IEltYWdlSW5mby5JbWFnZUluZm9EYXRhO1xyXG4gICAgICAgIHJlc3RhdXJhbnRzLm1hcChmdW5jdGlvbiAocmVzdGF1cmFudCkge1xyXG4gICAgICAgICAgaWYgKHJlc3RhdXJhbnQucGhvdG9ncmFwaCkge1xyXG4gICAgICAgICAgICByZXN0YXVyYW50LmFsdCA9IGltYWdlRGF0YVtyZXN0YXVyYW50LnBob3RvZ3JhcGhdLmFsdDtcclxuICAgICAgICAgICAgcmVzdGF1cmFudC5jYXB0aW9uID0gaW1hZ2VEYXRhW3Jlc3RhdXJhbnQucGhvdG9ncmFwaF0uY2FwdGlvbjtcclxuICAgICAgICAgIH1cclxuICAgICAgICAgIHNlbGYuZGJQcm9taXNlLnRoZW4oZnVuY3Rpb24gKGRiKSB7XHJcbiAgICAgICAgICAgIHZhciB0eCA9IGRiLnRyYW5zYWN0aW9uKCdyZXN0YXVyYW50cycsICdyZWFkd3JpdGUnKTtcclxuICAgICAgICAgICAgdmFyIHJlc3RhdXJhbnRTdG9yZSA9IHR4Lm9iamVjdFN0b3JlKCdyZXN0YXVyYW50cycpO1xyXG4gICAgICAgICAgICByZXR1cm4gcmVzdGF1cmFudFN0b3JlLnB1dChyZXN0YXVyYW50KTtcclxuICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgcmV0dXJuIHJlc3RhdXJhbnQ7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgY2FsbGJhY2sobnVsbCwgcmVzdGF1cmFudHMpO1xyXG4gICAgICB9IGVsc2UgeyAvLyBPb3BzIS4gR290IGFuIGVycm9yIGZyb20gc2VydmVyLlxyXG4gICAgICAgIHRoaXMuZGJQcm9taXNlLnRoZW4oKCkgPT4ge1xyXG4gICAgICAgICAgcmV0dXJuIERCSGVscGVyLmZldGNoUmVzdGF1cmFudHNGcm9tU3RvcmFnZSgpXHJcbiAgICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzdGF1cmFudHMpIHtcclxuICAgICAgICAgIGNhbGxiYWNrKG51bGwsIHJlc3RhdXJhbnRzKTtcclxuICAgICAgICB9KS5jYXRjaChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICBjb25zdCBlcnJvciA9IChgUmVxdWVzdCBmYWlsZWQuYCk7XHJcbiAgICAgICAgICBjYWxsYmFjayhlcnJvciwgbnVsbCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgIH1cclxuICAgIH07XHJcbiAgICB4aHIub25lcnJvciA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgREJIZWxwZXIuZmV0Y2hSZXN0YXVyYW50c0Zyb21TdG9yYWdlKCkudGhlbigocmVzdGF1cmFudHMpID0+IHtcclxuICAgICAgICBjYWxsYmFjayhudWxsLCByZXN0YXVyYW50cyk7XHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgeGhyLnNlbmQoKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEZldGNoIHJlc3RhdXJhbnRzIGZyb20gaW5kZWNlZERCXHJcbiAgICovXHJcbiAgc3RhdGljIGZldGNoUmVzdGF1cmFudHNGcm9tU3RvcmFnZSgpIHtcclxuICAgIHJldHVybiB0aGlzLmRiUHJvbWlzZS50aGVuKGZ1bmN0aW9uIChkYikge1xyXG4gICAgICB2YXIgdHggPSBkYi50cmFuc2FjdGlvbigncmVzdGF1cmFudHMnKTtcclxuICAgICAgdmFyIHJlc3RhdXJhbnRzU3RvcmUgPSB0eC5vYmplY3RTdG9yZSgncmVzdGF1cmFudHMnKTtcclxuICAgICAgcmV0dXJuIHJlc3RhdXJhbnRzU3RvcmUuZ2V0QWxsKCk7XHJcbiAgICB9KVxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogRmV0Y2ggcmVzdGF1cmFudCBieSBJZCBmcm9tIGluZGVjZWREQlxyXG4gICAqL1xyXG4gIHN0YXRpYyBmZXRjaFJlc3RhdXJhbnRGcm9tU3RvcmFnZShpZCkge1xyXG4gICAgcmV0dXJuIHRoaXMuZGJQcm9taXNlLnRoZW4oZnVuY3Rpb24gKGRiKSB7XHJcbiAgICAgIHZhciB0eCA9IGRiLnRyYW5zYWN0aW9uKCdyZXN0YXVyYW50cycpO1xyXG4gICAgICB2YXIgcmVzdGF1cmFudHNTdG9yZSA9IHR4Lm9iamVjdFN0b3JlKCdyZXN0YXVyYW50cycpO1xyXG4gICAgICByZXR1cm4gcmVzdGF1cmFudHNTdG9yZS5nZXQocGFyc2VJbnQoaWQpKTtcclxuICAgIH0pXHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBGZXRjaCBhIHJlc3RhdXJhbnQgYnkgaXRzIElELlxyXG4gICAqL1xyXG4gIHN0YXRpYyBmZXRjaFJlc3RhdXJhbnRCeUlkKGlkLCBjYWxsYmFjaykge1xyXG4gICAgdmFyIHNlbGYgPSB0aGlzO1xyXG5cclxuICAgIGxldCB4aHIgPSBuZXcgWE1MSHR0cFJlcXVlc3QoKTtcclxuICAgIHhoci5vcGVuKCdHRVQnLCBEQkhlbHBlci5EQVRBQkFTRV9VUkwgKyAnLycgKyBpZCk7XHJcbiAgICB4aHIub25sb2FkID0gKCkgPT4ge1xyXG4gICAgICBpZiAoeGhyLnN0YXR1cyA9PT0gMjAwKSB7IC8vIEdvdCBhIHN1Y2Nlc3MgcmVzcG9uc2UgZnJvbSBzZXJ2ZXIhXHJcbiAgICAgICAgY29uc3QgcmVzdGF1cmFudCA9IEpTT04ucGFyc2UoeGhyLnJlc3BvbnNlVGV4dCk7XHJcbiAgICAgICAgaWYgKHJlc3RhdXJhbnQucGhvdG9ncmFwaCkge1xyXG4gICAgICAgICAgY29uc3QgaW1hZ2VEYXRhID0gSW1hZ2VJbmZvLkltYWdlSW5mb0RhdGE7XHJcbiAgICAgICAgICByZXN0YXVyYW50LmFsdCA9IGltYWdlRGF0YVtyZXN0YXVyYW50LnBob3RvZ3JhcGhdLmFsdDtcclxuICAgICAgICAgIHJlc3RhdXJhbnQuY2FwdGlvbiA9IGltYWdlRGF0YVtyZXN0YXVyYW50LnBob3RvZ3JhcGhdLmNhcHRpb247XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHNlbGYuZGJQcm9taXNlLnRoZW4oZnVuY3Rpb24gKGRiKSB7XHJcbiAgICAgICAgICB2YXIgdHggPSBkYi50cmFuc2FjdGlvbigncmVzdGF1cmFudHMnLCAncmVhZHdyaXRlJyk7XHJcbiAgICAgICAgICB2YXIgcmVzdGF1cmFudFN0b3JlID0gdHgub2JqZWN0U3RvcmUoJ3Jlc3RhdXJhbnRzJyk7XHJcbiAgICAgICAgICByZXR1cm4gcmVzdGF1cmFudFN0b3JlLnB1dChyZXN0YXVyYW50KTtcclxuICAgICAgICB9KVxyXG4gICAgICAgIGNhbGxiYWNrKG51bGwsIHJlc3RhdXJhbnQpO1xyXG4gICAgICB9IGVsc2UgeyAvLyBPb3BzIS4gR290IGFuIGVycm9yIGZyb20gc2VydmVyLlxyXG4gICAgICAgIHRoaXMuZGJQcm9taXNlLnRoZW4oKCkgPT4ge1xyXG4gICAgICAgICAgcmV0dXJuIERCSGVscGVyLmZldGNoUmVzdGF1cmFudEZyb21TdG9yYWdlKGlkKVxyXG4gICAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlc3RhdXJhbnQpIHtcclxuICAgICAgICAgIGNhbGxiYWNrKG51bGwsIHJlc3RhdXJhbnQpO1xyXG4gICAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgIGNvbnN0IGVycm9yID0gKGBSZXF1ZXN0IGZhaWxlZC5gKTtcclxuICAgICAgICAgIGNhbGxiYWNrKGVycm9yLCBudWxsKTtcclxuICAgICAgICB9KTtcclxuICAgICAgfVxyXG4gICAgfTtcclxuICAgIHhoci5vbmVycm9yID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICBEQkhlbHBlci5mZXRjaFJlc3RhdXJhbnRGcm9tU3RvcmFnZShpZCkudGhlbihmdW5jdGlvbiAocmVzdGF1cmFudCkge1xyXG4gICAgICAgIGNhbGxiYWNrKG51bGwsIHJlc3RhdXJhbnQpO1xyXG4gICAgICB9KTtcclxuICAgIH1cclxuICAgIHhoci5zZW5kKCk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBGZXRjaCByZXN0YXVyYW50cyBieSBhIGN1aXNpbmUgdHlwZSB3aXRoIHByb3BlciBlcnJvciBoYW5kbGluZy5cclxuICAgKi9cclxuICBzdGF0aWMgZmV0Y2hSZXN0YXVyYW50QnlDdWlzaW5lKGN1aXNpbmUsIGNhbGxiYWNrKSB7XHJcbiAgICAvLyBGZXRjaCBhbGwgcmVzdGF1cmFudHMgIHdpdGggcHJvcGVyIGVycm9yIGhhbmRsaW5nXHJcbiAgICBEQkhlbHBlci5mZXRjaFJlc3RhdXJhbnRzKChlcnJvciwgcmVzdGF1cmFudHMpID0+IHtcclxuICAgICAgaWYgKGVycm9yKSB7XHJcbiAgICAgICAgY2FsbGJhY2soZXJyb3IsIG51bGwpO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIC8vIEZpbHRlciByZXN0YXVyYW50cyB0byBoYXZlIG9ubHkgZ2l2ZW4gY3Vpc2luZSB0eXBlXHJcbiAgICAgICAgY29uc3QgcmVzdWx0cyA9IHJlc3RhdXJhbnRzLmZpbHRlcihyID0+IHIuY3Vpc2luZV90eXBlID09IGN1aXNpbmUpO1xyXG4gICAgICAgIGNhbGxiYWNrKG51bGwsIHJlc3VsdHMpO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEZldGNoIHJlc3RhdXJhbnRzIGJ5IGEgbmVpZ2hib3Job29kIHdpdGggcHJvcGVyIGVycm9yIGhhbmRsaW5nLlxyXG4gICAqL1xyXG4gIHN0YXRpYyBmZXRjaFJlc3RhdXJhbnRCeU5laWdoYm9yaG9vZChuZWlnaGJvcmhvb2QsIGNhbGxiYWNrKSB7XHJcbiAgICAvLyBGZXRjaCBhbGwgcmVzdGF1cmFudHNcclxuICAgIERCSGVscGVyLmZldGNoUmVzdGF1cmFudHMoKGVycm9yLCByZXN0YXVyYW50cykgPT4ge1xyXG4gICAgICBpZiAoZXJyb3IpIHtcclxuICAgICAgICBjYWxsYmFjayhlcnJvciwgbnVsbCk7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgLy8gRmlsdGVyIHJlc3RhdXJhbnRzIHRvIGhhdmUgb25seSBnaXZlbiBuZWlnaGJvcmhvb2RcclxuICAgICAgICBjb25zdCByZXN1bHRzID0gcmVzdGF1cmFudHMuZmlsdGVyKHIgPT4gci5uZWlnaGJvcmhvb2QgPT0gbmVpZ2hib3Job29kKTtcclxuICAgICAgICBjYWxsYmFjayhudWxsLCByZXN1bHRzKTtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBGZXRjaCByZXN0YXVyYW50cyBieSBhIGN1aXNpbmUgYW5kIGEgbmVpZ2hib3Job29kIHdpdGggcHJvcGVyIGVycm9yIGhhbmRsaW5nLlxyXG4gICAqL1xyXG4gIHN0YXRpYyBmZXRjaFJlc3RhdXJhbnRCeUN1aXNpbmVBbmROZWlnaGJvcmhvb2QoY3Vpc2luZSwgbmVpZ2hib3Job29kLCBjYWxsYmFjaykge1xyXG4gICAgLy8gRmV0Y2ggYWxsIHJlc3RhdXJhbnRzXHJcbiAgICBEQkhlbHBlci5mZXRjaFJlc3RhdXJhbnRzKChlcnJvciwgcmVzdGF1cmFudHMpID0+IHtcclxuICAgICAgaWYgKGVycm9yKSB7XHJcbiAgICAgICAgY2FsbGJhY2soZXJyb3IsIG51bGwpO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIGxldCByZXN1bHRzID0gcmVzdGF1cmFudHNcclxuICAgICAgICBpZiAoY3Vpc2luZSAhPSAnYWxsJykgeyAvLyBmaWx0ZXIgYnkgY3Vpc2luZVxyXG4gICAgICAgICAgcmVzdWx0cyA9IHJlc3VsdHMuZmlsdGVyKHIgPT4gci5jdWlzaW5lX3R5cGUgPT0gY3Vpc2luZSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChuZWlnaGJvcmhvb2QgIT0gJ2FsbCcpIHsgLy8gZmlsdGVyIGJ5IG5laWdoYm9yaG9vZFxyXG4gICAgICAgICAgcmVzdWx0cyA9IHJlc3VsdHMuZmlsdGVyKHIgPT4gci5uZWlnaGJvcmhvb2QgPT0gbmVpZ2hib3Job29kKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgY2FsbGJhY2sobnVsbCwgcmVzdWx0cyk7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogRmV0Y2ggYWxsIG5laWdoYm9yaG9vZHMgd2l0aCBwcm9wZXIgZXJyb3IgaGFuZGxpbmcuXHJcbiAgICovXHJcbiAgc3RhdGljIGZldGNoTmVpZ2hib3Job29kcyhjYWxsYmFjaykge1xyXG4gICAgLy8gRmV0Y2ggYWxsIHJlc3RhdXJhbnRzXHJcbiAgICBEQkhlbHBlci5mZXRjaFJlc3RhdXJhbnRzKChlcnJvciwgcmVzdGF1cmFudHMpID0+IHtcclxuICAgICAgaWYgKGVycm9yKSB7XHJcbiAgICAgICAgY2FsbGJhY2soZXJyb3IsIG51bGwpO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIC8vIEdldCBhbGwgbmVpZ2hib3Job29kcyBmcm9tIGFsbCByZXN0YXVyYW50c1xyXG4gICAgICAgIGNvbnN0IG5laWdoYm9yaG9vZHMgPSByZXN0YXVyYW50cy5tYXAoKHYsIGkpID0+IHJlc3RhdXJhbnRzW2ldLm5laWdoYm9yaG9vZClcclxuICAgICAgICAvLyBSZW1vdmUgZHVwbGljYXRlcyBmcm9tIG5laWdoYm9yaG9vZHNcclxuICAgICAgICBjb25zdCB1bmlxdWVOZWlnaGJvcmhvb2RzID0gbmVpZ2hib3Job29kcy5maWx0ZXIoKHYsIGkpID0+IG5laWdoYm9yaG9vZHMuaW5kZXhPZih2KSA9PSBpKVxyXG4gICAgICAgIGNhbGxiYWNrKG51bGwsIHVuaXF1ZU5laWdoYm9yaG9vZHMpO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEZldGNoIGFsbCBjdWlzaW5lcyB3aXRoIHByb3BlciBlcnJvciBoYW5kbGluZy5cclxuICAgKi9cclxuICBzdGF0aWMgZmV0Y2hDdWlzaW5lcyhjYWxsYmFjaykge1xyXG4gICAgLy8gRmV0Y2ggYWxsIHJlc3RhdXJhbnRzXHJcbiAgICBEQkhlbHBlci5mZXRjaFJlc3RhdXJhbnRzKChlcnJvciwgcmVzdGF1cmFudHMpID0+IHtcclxuICAgICAgaWYgKGVycm9yKSB7XHJcbiAgICAgICAgY2FsbGJhY2soZXJyb3IsIG51bGwpO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIC8vIEdldCBhbGwgY3Vpc2luZXMgZnJvbSBhbGwgcmVzdGF1cmFudHNcclxuICAgICAgICBjb25zdCBjdWlzaW5lcyA9IHJlc3RhdXJhbnRzLm1hcCgodiwgaSkgPT4gcmVzdGF1cmFudHNbaV0uY3Vpc2luZV90eXBlKVxyXG4gICAgICAgIC8vIFJlbW92ZSBkdXBsaWNhdGVzIGZyb20gY3Vpc2luZXNcclxuICAgICAgICBjb25zdCB1bmlxdWVDdWlzaW5lcyA9IGN1aXNpbmVzLmZpbHRlcigodiwgaSkgPT4gY3Vpc2luZXMuaW5kZXhPZih2KSA9PSBpKVxyXG4gICAgICAgIGNhbGxiYWNrKG51bGwsIHVuaXF1ZUN1aXNpbmVzKTtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBSZXN0YXVyYW50IHBhZ2UgVVJMLlxyXG4gICAqL1xyXG4gIHN0YXRpYyB1cmxGb3JSZXN0YXVyYW50KHJlc3RhdXJhbnQpIHtcclxuICAgIHJldHVybiAoYC4vcmVzdGF1cmFudC5odG1sP2lkPSR7cmVzdGF1cmFudC5pZH1gKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIFJlc3RhdXJhbnQgaW1hZ2UgVVJMcyBKU09OLlxyXG4gICAqL1xyXG4gIHN0YXRpYyBpbWFnZVVybEZvclJlc3RhdXJhbnQocmVzdGF1cmFudCkge1xyXG4gICAgY29uc3QgcmVwcmVzZW50YXRpb25zVVJMcyA9IERCSGVscGVyLmltYWdlUmVwcmVzZW50YXRpb25zUGF0aHMocmVzdGF1cmFudC5waG90b2dyYXBoKTtcclxuICAgIHJldHVybiByZXByZXNlbnRhdGlvbnNVUkxzO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogUGF0aHMgZm9yIHZhcmlvdXMgaW1hZ2UgcmVwcmVzZW50YXRpb25zXHJcbiAgICovXHJcbiAgc3RhdGljIGltYWdlUmVwcmVzZW50YXRpb25zUGF0aHMoZmlsZW5hbWUpIHtcclxuICAgIGNvbnN0IFtmb2xkZXJOYW1lLCBzdWZmaXhdID0gWycuL2ltZy8nLCAnanBnJ10gLy8sJ3dlYnAnXTtcclxuICAgIGNvbnN0IGxhcmdlXzF4ID0gZm9sZGVyTmFtZS5jb25jYXQoZmlsZW5hbWUsICctNTEyXzF4JywgJy4nLCBzdWZmaXgpO1xyXG4gICAgY29uc3QgbGFyZ2VfMnggPSBmb2xkZXJOYW1lLmNvbmNhdChmaWxlbmFtZSwgJy01MTJfMngnLCAnLicsIHN1ZmZpeCk7XHJcbiAgICBjb25zdCBzbWFsbF8xeCA9IGZvbGRlck5hbWUuY29uY2F0KGZpbGVuYW1lLCAnLTM4MF8xeCcsICcuJywgc3VmZml4KTtcclxuICAgIGNvbnN0IHNtYWxsXzJ4ID0gZm9sZGVyTmFtZS5jb25jYXQoZmlsZW5hbWUsICctMzgwXzJ4JywgJy4nLCBzdWZmaXgpO1xyXG5cclxuICAgIHJldHVybiB7XHJcbiAgICAgIGxhcmdlXzF4OiBsYXJnZV8xeCxcclxuICAgICAgbGFyZ2VfMng6IGxhcmdlXzJ4LFxyXG4gICAgICBzbWFsbF8xeDogc21hbGxfMXgsXHJcbiAgICAgIHNtYWxsXzJ4OiBzbWFsbF8yeFxyXG4gICAgfTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIE1hcCBtYXJrZXIgZm9yIGEgcmVzdGF1cmFudC5cclxuICAgKi9cclxuICBzdGF0aWMgbWFwTWFya2VyRm9yUmVzdGF1cmFudChyZXN0YXVyYW50LCBtYXApIHtcclxuICAgIGNvbnN0IG1hcmtlciA9IG5ldyBnb29nbGUubWFwcy5NYXJrZXIoe1xyXG4gICAgICBwb3NpdGlvbjogcmVzdGF1cmFudC5sYXRsbmcsXHJcbiAgICAgIHRpdGxlOiByZXN0YXVyYW50Lm5hbWUsXHJcbiAgICAgIHVybDogREJIZWxwZXIudXJsRm9yUmVzdGF1cmFudChyZXN0YXVyYW50KSxcclxuICAgICAgbWFwOiBtYXAsXHJcbiAgICAgIGFuaW1hdGlvbjogZ29vZ2xlLm1hcHMuQW5pbWF0aW9uLkRST1BcclxuICAgIH0pO1xyXG4gICAgcmV0dXJuIG1hcmtlcjtcclxuICB9XHJcblxyXG59XHJcbm1vZHVsZS5leHBvcnRzID0gREJIZWxwZXI7IiwiLyoqXG4gKiBDb21tb24gaW1hZ2UgaW5mbyBjbGFzc1xuICovXG5jbGFzcyBJbWFnZUluZm8ge1xuXG4gIHN0YXRpYyBnZXQgSW1hZ2VJbmZvRGF0YSgpIHtcblxuICAgIHJldHVybiB7XG4gICAgICAxOiB7XG4gICAgICAgIFwiaWRcIjogMSxcbiAgICAgICAgXCJwaG90b2dyYXBoXCI6IFwiMVwiLFxuICAgICAgICBcImFsdFwiOiBcInRoZSBtYWluIHJlc3RhdXJhbnQgYXJlYVwiLFxuICAgICAgICBcImNhcHRpb25cIjogXCJMYXJnZSBzcGFjZSB3aXRoIG5pY2UgZGVjb3JhdGlvblwiXG4gICAgICB9LFxuICAgICAgMjoge1xuICAgICAgICBcImlkXCI6IDIsXG4gICAgICAgIFwicGhvdG9ncmFwaFwiOiBcIjJcIixcbiAgICAgICAgXCJhbHRcIjogXCJwaXp6YSBvbiBhIHBsYXRlXCIsXG4gICAgICAgIFwiY2FwdGlvblwiOiBcIlRhc3R5IHBpenphcyBtYWRlIGV2ZXJ5IGRheVwiXG4gICAgICB9LFxuICAgICAgMzoge1xuICAgICAgICBcImlkXCI6IDMsXG4gICAgICAgIFwicGhvdG9ncmFwaFwiOiBcIjNcIixcbiAgICAgICAgXCJhbHRcIjogXCJ0aGUgbWFpbiByZXN0YXVyYW50IGFyZWEgZW1wdHlcIixcbiAgICAgICAgXCJjYXB0aW9uXCI6IFwiTW9kZXJuIGRlc2lnbiB0byBlbmpveSB5b3VyIG1lYWxzXCIsXG4gICAgICB9LFxuICAgICAgNDoge1xuICAgICAgICBcImlkXCI6IDQsXG4gICAgICAgIFwicGhvdG9ncmFwaFwiOiBcIjRcIixcbiAgICAgICAgXCJhbHRcIjogXCJ0aGUgZW50cmFuY2Ugb2YgdGhlIHNob3BcIixcbiAgICAgICAgXCJjYXB0aW9uXCI6IFwiVGhlIGNvcm5lciBzaG9wLCBlYXN5IHRvIHNwb3RcIlxuICAgICAgfSxcbiAgICAgIDU6IHtcbiAgICAgICAgXCJpZFwiOiA1LFxuICAgICAgICBcInBob3RvZ3JhcGhcIjogXCI1XCIsXG4gICAgICAgIFwiYWx0XCI6IFwiaW5zaWRlIHRoZSBzaG9wLCBjdXN0b21lcnMgYW5kIHN0YWZmXCIsXG4gICAgICAgIFwiY2FwdGlvblwiOiBcIk1lZXQgb3VyIGZyaWVuZGx5IHN0YWZmXCJcbiAgICAgIH0sXG4gICAgICA2OiB7XG4gICAgICAgIFwiaWRcIjogNixcbiAgICAgICAgXCJwaG90b2dyYXBoXCI6IFwiNlwiLFxuICAgICAgICBcImFsdFwiOiBcInRoZSBhcmVhIGluc2lkZSB3aXRoIHNvbWUgcGVvcGxlIHF1ZXVlaW5nIGFuZCBvdGhlciBlYXRpbmdcIixcbiAgICAgICAgXCJjYXB0aW9uXCI6IFwiTGFyZ2Ugc3BhY2UgZm9yIGJpZyBncm91cHNcIlxuICAgICAgfSxcbiAgICAgIDc6IHtcbiAgICAgICAgXCJpZFwiOiA3LFxuICAgICAgICBcInBob3RvZ3JhcGhcIjogXCI3XCIsXG4gICAgICAgIFwiYWx0XCI6IFwiYmxhY2sgYW5kIHdoaXRlLCB0aGUgZGlzcGxheSBvZiB0aGUgc2hvcCB3aXRoIDIgcGVvcGxlIHBhc3NpbmcgYnlcIixcbiAgICAgICAgXCJjYXB0aW9uXCI6IFwiT3VyIGNsYXNzaWMgc2hvcCwgc3RpbGwga2VlcGluZyBvdXIgdmFsdWVzXCJcbiAgICAgIH0sXG4gICAgICA4OiB7XG4gICAgICAgIFwiaWRcIjogOCxcbiAgICAgICAgXCJwaG90b2dyYXBoXCI6IFwiOFwiLFxuICAgICAgICBcImFsdFwiOiBcIm91dGRvb3IgZGlzcGxheSBvZiB0aGUgY29ybmVyIHNob3AsIGJpZyBsYWJlbCByZWFkcyAndGhlIER1dGNoJ1wiLFxuICAgICAgICBcImNhcHRpb25cIjogXCJFYXN5IHRvIGZpbmQgb3VyIGJlYXV0aWZ1bCBidWlsZGluZ1wiLFxuICAgICAgfSxcbiAgICAgIDk6IHtcbiAgICAgICAgXCJpZFwiOiA5LFxuICAgICAgICBcInBob3RvZ3JhcGhcIjogXCI5XCIsXG4gICAgICAgIFwiY2FwdGlvblwiOiBcIkVuam95aW5nIG91ciBob21lIG1hZGUgbWVhbHNcIixcbiAgICAgICAgXCJhbHRcIjogXCJibGFjayBhbmQgd2hpdGUsIHBlb3BsZSBlYXRpbmcgaW4gdGhlIHJlc3RhdXJhbnRcIlxuICAgICAgfSxcbiAgICAgIDEwOiB7XG4gICAgICAgIFwiaWRcIjogMTAsXG4gICAgICAgIFwicGhvdG9ncmFwaFwiOiBcIjEwXCIsXG4gICAgICAgIFwiYWx0XCI6IFwidGhlIGFyZWEgaW5zaWRlIHRoZSBzaG9wLCB0aGUgZnVybml0dXJlIGFuZCBiYXIsIHdpdGhvdXQgcGVvcGxlXCIsXG4gICAgICAgIFwiY2FwdGlvblwiOiBcIk1vZGVybiBzcGFjZSwgcmVhZHkgdG8gc2VydmUgeW91ciBhcHBldGl0ZVwiXG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gSW1hZ2VJbmZvOyIsImNvbnN0IERCSGVscGVyID0gcmVxdWlyZSgnLi9kYmhlbHBlcicpO1xuXG5sZXQgcmVzdGF1cmFudDtcbnZhciBtYXA7XG5cbi8qKlxuICogSW5pdGlhbGl6ZSBHb29nbGUgbWFwLCBjYWxsZWQgZnJvbSBIVE1MLlxuICovXG53aW5kb3cuaW5pdE1hcCA9ICgpID0+IHtcbiAgZmV0Y2hSZXN0YXVyYW50RnJvbVVSTCgoZXJyb3IsIHJlc3RhdXJhbnQpID0+IHtcbiAgICBpZiAoZXJyb3IpIHsgLy8gR290IGFuIGVycm9yIVxuICAgICAgY29uc29sZS5lcnJvcihlcnJvcik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMubWFwID0gbmV3IGdvb2dsZS5tYXBzLk1hcChkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbWFwJyksIHtcbiAgICAgICAgem9vbTogMTYsXG4gICAgICAgIGNlbnRlcjogcmVzdGF1cmFudC5sYXRsbmcsXG4gICAgICAgIHNjcm9sbHdoZWVsOiBmYWxzZVxuICAgICAgfSk7XG4gICAgICBmaWxsQnJlYWRjcnVtYigpO1xuICAgICAgREJIZWxwZXIubWFwTWFya2VyRm9yUmVzdGF1cmFudCh0aGlzLnJlc3RhdXJhbnQsIHRoaXMubWFwKTtcbiAgICB9XG4gIH0pO1xufVxuXG4vKipcbiAqIEluaXRpYWxpc2UgaW5kZXhlZERCXG4gKi9cbkRCSGVscGVyLmluaXRJbmRleGVkREIoKTtcblxuXG4vKipcbiAqIEdldCBjdXJyZW50IHJlc3RhdXJhbnQgZnJvbSBwYWdlIFVSTC5cbiAqL1xuZmV0Y2hSZXN0YXVyYW50RnJvbVVSTCA9IChjYWxsYmFjaykgPT4ge1xuICBpZiAodGhpcy5yZXN0YXVyYW50KSB7IC8vIHJlc3RhdXJhbnQgYWxyZWFkeSBmZXRjaGVkIVxuICAgIGNhbGxiYWNrKG51bGwsIHRoaXMucmVzdGF1cmFudClcbiAgICByZXR1cm47XG4gIH1cbiAgY29uc3QgaWQgPSBnZXRQYXJhbWV0ZXJCeU5hbWUoJ2lkJyk7XG4gIGlmICghaWQpIHsgLy8gbm8gaWQgZm91bmQgaW4gVVJMXG4gICAgZXJyb3IgPSAnTm8gcmVzdGF1cmFudCBpZCBpbiBVUkwnXG4gICAgY2FsbGJhY2soZXJyb3IsIG51bGwpO1xuICB9IGVsc2Uge1xuICAgIERCSGVscGVyLmZldGNoUmVzdGF1cmFudEJ5SWQoaWQsIChlcnJvciwgcmVzdGF1cmFudCkgPT4ge1xuICAgICAgdGhpcy5yZXN0YXVyYW50ID0gcmVzdGF1cmFudDtcbiAgICAgIGlmICghcmVzdGF1cmFudCkge1xuICAgICAgICBjb25zb2xlLmVycm9yKGVycm9yKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgZmlsbFJlc3RhdXJhbnRIVE1MKCk7XG4gICAgICBjYWxsYmFjayhudWxsLCByZXN0YXVyYW50KVxuICAgIH0pO1xuICB9XG59XG5cbi8qKlxuICogQ3JlYXRlIHJlc3RhdXJhbnQgSFRNTCBhbmQgYWRkIGl0IHRvIHRoZSB3ZWJwYWdlXG4gKi9cbmZpbGxSZXN0YXVyYW50SFRNTCA9IChyZXN0YXVyYW50ID0gdGhpcy5yZXN0YXVyYW50KSA9PiB7XG4gIGNvbnN0IG5hbWUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncmVzdGF1cmFudC1uYW1lJyk7XG4gIG5hbWUuaW5uZXJIVE1MID0gcmVzdGF1cmFudC5uYW1lO1xuXG4gIGNvbnN0IGFkZHJlc3MgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncmVzdGF1cmFudC1hZGRyZXNzJyk7XG4gIGFkZHJlc3MuaW5uZXJIVE1MID0gcmVzdGF1cmFudC5hZGRyZXNzO1xuXG4gIGlmIChyZXN0YXVyYW50LnBob3RvZ3JhcGgpIHtcbiAgICBjb25zdCBwaWN0dXJlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Jlc3RhdXJhbnQtaW1nJyk7XG4gICAgcGljdHVyZS5jbGFzc05hbWUgPSAncmVzdGF1cmFudC1pbWcnO1xuICAgIHBpY3R1cmUuc2V0QXR0cmlidXRlKCdhcmlhLWxhYmVsbGVkYnknLCBcImZpZ19cIiArIHJlc3RhdXJhbnQuaWQpO1xuICAgIHBpY3R1cmUuc2V0QXR0cmlidXRlKCdyb2xlJywgJ2ltZycpO1xuXG4gICAgY29uc3QgaW1hZ2VSZXByZXNlbnRhdGlvbnMgPSBEQkhlbHBlci5pbWFnZVVybEZvclJlc3RhdXJhbnQocmVzdGF1cmFudCk7XG4gICAgY29uc3Qgc291cmNlU21hbGwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzb3VyY2UnKTtcbiAgICBzb3VyY2VTbWFsbC5zZXRBdHRyaWJ1dGUoJ21lZGlhJywgJyhtYXgtd2lkdGg6NzAwcHgpJylcbiAgICBzb3VyY2VTbWFsbC5zZXRBdHRyaWJ1dGUoJ3NyY3NldCcsXG4gICAgICBpbWFnZVJlcHJlc2VudGF0aW9ucy5zbWFsbF8xeFxuICAgICAgICAuY29uY2F0KCcgMXgsJylcbiAgICAgICAgLmNvbmNhdChpbWFnZVJlcHJlc2VudGF0aW9ucy5zbWFsbF8yeClcbiAgICAgICAgLmNvbmNhdCgnIDJ4JylcbiAgICApO1xuICAgIHBpY3R1cmUuYXBwZW5kKHNvdXJjZVNtYWxsKTtcblxuICAgIGNvbnN0IHNvdXJjZUxhcmdlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc291cmNlJyk7XG4gICAgc291cmNlTGFyZ2Uuc2V0QXR0cmlidXRlKCdtZWRpYScsICcobWluLXdpZHRoOjcwMXB4KScpXG4gICAgc291cmNlTGFyZ2Uuc2V0QXR0cmlidXRlKCdzcmNzZXQnLFxuICAgICAgaW1hZ2VSZXByZXNlbnRhdGlvbnMubGFyZ2VfMXhcbiAgICAgICAgLmNvbmNhdCgnIDF4LCcpXG4gICAgICAgIC5jb25jYXQoaW1hZ2VSZXByZXNlbnRhdGlvbnMubGFyZ2VfMngpXG4gICAgICAgIC5jb25jYXQoJyAyeCcpXG4gICAgKTtcbiAgICBwaWN0dXJlLmFwcGVuZChzb3VyY2VMYXJnZSk7XG5cbiAgICBjb25zdCBpbWFnZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2ltZycpO1xuICAgIGltYWdlLnNyYyA9IGltYWdlUmVwcmVzZW50YXRpb25zLnNtYWxsXzJ4O1xuICAgIGltYWdlLnNldEF0dHJpYnV0ZSgnYWx0JywgJ3Jlc3RhdXJhbnQgJy5jb25jYXQocmVzdGF1cmFudC5uYW1lLCAnLCAnLCByZXN0YXVyYW50LmFsdCkpO1xuICAgIGltYWdlLmNsYXNzTmFtZSA9ICdyZXN0YXVyYW50LWltZyc7XG4gICAgcGljdHVyZS5hcHBlbmQoaW1hZ2UpO1xuXG4gICAgY29uc3QgZmlnY2FwdGlvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2ZpZ2NhcHRpb24nKTtcbiAgICBmaWdjYXB0aW9uLnNldEF0dHJpYnV0ZSgnaWQnLCBcImZpZ19cIiArIHJlc3RhdXJhbnQuaWQpXG4gICAgZmlnY2FwdGlvbi5pbm5lckhUTUwgPSByZXN0YXVyYW50LmNhcHRpb247XG4gICAgcGljdHVyZS5hcHBlbmQoZmlnY2FwdGlvbik7XG4gIH1cblxuICBjb25zdCBjdWlzaW5lID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Jlc3RhdXJhbnQtY3Vpc2luZScpO1xuICBjdWlzaW5lLmlubmVySFRNTCA9IHJlc3RhdXJhbnQuY3Vpc2luZV90eXBlO1xuXG4gIC8vIGZpbGwgb3BlcmF0aW5nIGhvdXJzXG4gIGlmIChyZXN0YXVyYW50Lm9wZXJhdGluZ19ob3Vycykge1xuICAgIGZpbGxSZXN0YXVyYW50SG91cnNIVE1MKCk7XG4gIH1cbiAgLy8gZmlsbCByZXZpZXdzXG4gIGZpbGxSZXZpZXdzSFRNTCgpO1xuICBmaWxsU3VibWl0UmV2aWV3c0hUTUwoKTtcbn1cblxuLyoqXG4gKiBDcmVhdGUgcmVzdGF1cmFudCBvcGVyYXRpbmcgaG91cnMgSFRNTCB0YWJsZSBhbmQgYWRkIGl0IHRvIHRoZSB3ZWJwYWdlLlxuICovXG5maWxsUmVzdGF1cmFudEhvdXJzSFRNTCA9IChvcGVyYXRpbmdIb3VycyA9IHRoaXMucmVzdGF1cmFudC5vcGVyYXRpbmdfaG91cnMpID0+IHtcbiAgY29uc3QgaG91cnMgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncmVzdGF1cmFudC1ob3VycycpO1xuICBmb3IgKGxldCBrZXkgaW4gb3BlcmF0aW5nSG91cnMpIHtcbiAgICBjb25zdCByb3cgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCd0cicpO1xuXG4gICAgY29uc3QgZGF5ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgndGQnKTtcbiAgICBkYXkuaW5uZXJIVE1MID0ga2V5O1xuICAgIHJvdy5hcHBlbmRDaGlsZChkYXkpO1xuXG4gICAgY29uc3QgdGltZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3RkJyk7XG4gICAgdGltZS5pbm5lckhUTUwgPSBvcGVyYXRpbmdIb3Vyc1trZXldO1xuICAgIHJvdy5hcHBlbmRDaGlsZCh0aW1lKTtcblxuICAgIGhvdXJzLmFwcGVuZENoaWxkKHJvdyk7XG4gIH1cbn1cblxuLyoqXG4gKiBDcmVhdGUgYWxsIHJldmlld3MgSFRNTCBhbmQgYWRkIHRoZW0gdG8gdGhlIHdlYnBhZ2UuXG4gKi9cbmZpbGxSZXZpZXdzSFRNTCA9IChyZXZpZXdzID0gdGhpcy5yZXN0YXVyYW50LnJldmlld3MpID0+IHtcbiAgY29uc3QgY29udGFpbmVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Jldmlld3MtY29udGFpbmVyJyk7XG4gIGNvbnN0IHRpdGxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaDInKTtcbiAgdGl0bGUuaW5uZXJIVE1MID0gJ1Jldmlld3MnO1xuICBjb250YWluZXIuYXBwZW5kQ2hpbGQodGl0bGUpO1xuXG4gIGlmICghcmV2aWV3cykge1xuICAgIGNvbnN0IG5vUmV2aWV3cyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3AnKTtcbiAgICBub1Jldmlld3MuaW5uZXJIVE1MID0gJ05vIHJldmlld3MgeWV0ISc7XG4gICAgY29udGFpbmVyLmFwcGVuZENoaWxkKG5vUmV2aWV3cyk7XG4gICAgcmV0dXJuO1xuICB9XG4gIGNvbnN0IHVsID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Jldmlld3MtbGlzdCcpO1xuICByZXZpZXdzLmZvckVhY2gocmV2aWV3ID0+IHtcbiAgICB1bC5hcHBlbmRDaGlsZChjcmVhdGVSZXZpZXdIVE1MKHJldmlldykpO1xuICB9KTtcbiAgY29udGFpbmVyLmFwcGVuZENoaWxkKHVsKTtcbn1cblxuLyoqXG4gKiBDcmVhdGUgc3VibWl0IHJldmlld3MgSFRNTCBhbmQgYWRkIHRoZW0gdG8gdGhlIHdlYnBhZ2UuXG4gKi9cbmZpbGxTdWJtaXRSZXZpZXdzSFRNTCA9ICgpID0+IHtcbiAgY29uc3QgY29udGFpbmVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Jldmlld3Mtc3VibWl0LWNvbnRhaW5lcicpO1xuICBjb25zdCB0aXRsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2gyJyk7XG4gIHRpdGxlLmlubmVySFRNTCA9ICdTdWJtaXQgUmV2aWV3JztcbiAgY29udGFpbmVyLmFwcGVuZENoaWxkKHRpdGxlKTtcblxuXG4gIGNvbnN0IHVzZXJuYW1lID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW5wdXQnKTtcbiAgdXNlcm5hbWUuc2V0QXR0cmlidXRlKCd0eXBlJywgJ3RleHQnKTtcbiAgdXNlcm5hbWUuc2V0QXR0cmlidXRlKCdpZCcsICd1c2VybmFtZScpO1xuICB1c2VybmFtZS5zZXRBdHRyaWJ1dGUoJ25hbWUnLCAndXNlcm5hbWUnKTtcbiAgdXNlcm5hbWUuc2V0QXR0cmlidXRlKCdwbGFjZWhvbGRlcicsICd1c2VybmFtZScpO1xuICBjb250YWluZXIuYXBwZW5kQ2hpbGQodXNlcm5hbWUpO1xuXG4gIGNvbnN0IHJhdGluZyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyk7XG4gIHJhdGluZy5zZXRBdHRyaWJ1dGUoJ3R5cGUnLCAnbnVtYmVyJyk7XG4gIHJhdGluZy5zZXRBdHRyaWJ1dGUoJ21pbicsIDApO1xuICByYXRpbmcuc2V0QXR0cmlidXRlKCdtYXgnLCA1KTtcbiAgcmF0aW5nLnNldEF0dHJpYnV0ZSgnaWQnLCAncmF0aW5nJyk7XG4gIHJhdGluZy5zZXRBdHRyaWJ1dGUoJ25hbWUnLCAncmF0aW5nJyk7XG4gIHJhdGluZy5zZXRBdHRyaWJ1dGUoJ3BsYWNlaG9sZGVyJywgJ3VzZXJuYW1lJyk7XG4gIGNvbnRhaW5lci5hcHBlbmRDaGlsZChyYXRpbmcpO1xuXG4gIGNvbnN0IGNvbW1lbnRzX2FyZWEgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCd0ZXh0YXJlYScpO1xuICBjb21tZW50c19hcmVhLnNldEF0dHJpYnV0ZSgnaWQnLCAnY29tbWVudHMnKTtcbiAgY29tbWVudHNfYXJlYS5zZXRBdHRyaWJ1dGUoJ25hbWUnLCAnY29tbWVudHMnKTtcbiAgY29udGFpbmVyLmFwcGVuZENoaWxkKGNvbW1lbnRzX2FyZWEpO1xuXG4gIGNvbnN0IHN1Ym1pdF9idG4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcbiAgc3VibWl0X2J0bi5zZXRBdHRyaWJ1dGUoJ2lkJywgJ3N1Ym1pdCcpO1xuICBzdWJtaXRfYnRuLmlubmVyVGV4dCA9ICdzdWJtaXQnO1xuICBjb250YWluZXIuYXBwZW5kQ2hpbGQoc3VibWl0X2J0bik7XG5cbiAgY29uc3QgcmVzdGF1cmFudF9pZCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyk7XG4gIHJlc3RhdXJhbnRfaWQuc2V0QXR0cmlidXRlKCd0eXBlJywgJ2hpZGRlbicpO1xuICByZXN0YXVyYW50X2lkLnNldEF0dHJpYnV0ZSgnbmFtZScsICdpZCcpO1xuICByZXN0YXVyYW50X2lkLnNldEF0dHJpYnV0ZSgndmFsdWUnLCB0aGlzLnJlc3RhdXJhbnQpO1xuICBjb250YWluZXIuYXBwZW5kQ2hpbGQocmVzdGF1cmFudF9pZCk7XG59XG5cbi8qKlxuICogQ3JlYXRlIHJldmlldyBIVE1MIGFuZCBhZGQgaXQgdG8gdGhlIHdlYnBhZ2UuXG4gKi9cbmNyZWF0ZVJldmlld0hUTUwgPSAocmV2aWV3KSA9PiB7XG4gIGNvbnN0IGxpID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbGknKTtcbiAgY29uc3QgbmFtZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3AnKTtcbiAgbmFtZS5pbm5lckhUTUwgPSByZXZpZXcubmFtZTtcbiAgbGkuYXBwZW5kQ2hpbGQobmFtZSk7XG5cbiAgY29uc3QgZGF0ZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3AnKTtcbiAgZGF0ZS5pbm5lckhUTUwgPSByZXZpZXcuZGF0ZTtcbiAgbGkuYXBwZW5kQ2hpbGQoZGF0ZSk7XG5cbiAgY29uc3QgcmF0aW5nID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgncCcpO1xuICByYXRpbmcuaW5uZXJIVE1MID0gYFJhdGluZzogJHtyZXZpZXcucmF0aW5nfWA7XG4gIGxpLmFwcGVuZENoaWxkKHJhdGluZyk7XG5cbiAgY29uc3QgY29tbWVudHMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdwJyk7XG4gIGNvbW1lbnRzLmlubmVySFRNTCA9IHJldmlldy5jb21tZW50cztcbiAgbGkuYXBwZW5kQ2hpbGQoY29tbWVudHMpO1xuXG4gIHJldHVybiBsaTtcbn1cblxuLyoqXG4gKiBBZGQgcmVzdGF1cmFudCBuYW1lIHRvIHRoZSBicmVhZGNydW1iIG5hdmlnYXRpb24gbWVudVxuICovXG5maWxsQnJlYWRjcnVtYiA9IChyZXN0YXVyYW50ID0gdGhpcy5yZXN0YXVyYW50KSA9PiB7XG4gIGNvbnN0IGJyZWFkY3J1bWIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYnJlYWRjcnVtYicpO1xuICBjb25zdCBsaSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xpJyk7XG4gIGNvbnN0IGFfbGluayA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2EnKTtcbiAgYV9saW5rLnNldEF0dHJpYnV0ZSgnaHJlZicsICcjJyk7XG4gIGFfbGluay5zZXRBdHRyaWJ1dGUoJ2FyaWEtY3VycmVudCcsICdwYWdlJyk7XG4gIGFfbGluay5zZXRBdHRyaWJ1dGUoJ2NsYXNzJywgJ2N1cnJlbnQtcGFnZScpXG4gIGFfbGluay5pbm5lckhUTUwgPSByZXN0YXVyYW50Lm5hbWU7XG4gIGxpLmFwcGVuZENoaWxkKGFfbGluayk7XG4gIGJyZWFkY3J1bWIuYXBwZW5kQ2hpbGQobGkpO1xufVxuXG4vKipcbiAqIEdldCBhIHBhcmFtZXRlciBieSBuYW1lIGZyb20gcGFnZSBVUkwuXG4gKi9cbmdldFBhcmFtZXRlckJ5TmFtZSA9IChuYW1lLCB1cmwpID0+IHtcbiAgaWYgKCF1cmwpXG4gICAgdXJsID0gd2luZG93LmxvY2F0aW9uLmhyZWY7XG4gIG5hbWUgPSBuYW1lLnJlcGxhY2UoL1tcXFtcXF1dL2csICdcXFxcJCYnKTtcbiAgY29uc3QgcmVnZXggPSBuZXcgUmVnRXhwKGBbPyZdJHtuYW1lfSg9KFteJiNdKil8JnwjfCQpYCksXG4gICAgcmVzdWx0cyA9IHJlZ2V4LmV4ZWModXJsKTtcbiAgaWYgKCFyZXN1bHRzKVxuICAgIHJldHVybiBudWxsO1xuICBpZiAoIXJlc3VsdHNbMl0pXG4gICAgcmV0dXJuICcnO1xuICByZXR1cm4gZGVjb2RlVVJJQ29tcG9uZW50KHJlc3VsdHNbMl0ucmVwbGFjZSgvXFwrL2csICcgJykpO1xufSJdfQ=="}