{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/idb/lib/idb.js","src/js/dbhelper.js","src/js/images.js","src/js/restaurant_info.js"],"names":[],"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","file":"bundle_restaurant.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\n\n(function() {\n  function toArray(arr) {\n    return Array.prototype.slice.call(arr);\n  }\n\n  function promisifyRequest(request) {\n    return new Promise(function(resolve, reject) {\n      request.onsuccess = function() {\n        resolve(request.result);\n      };\n\n      request.onerror = function() {\n        reject(request.error);\n      };\n    });\n  }\n\n  function promisifyRequestCall(obj, method, args) {\n    var request;\n    var p = new Promise(function(resolve, reject) {\n      request = obj[method].apply(obj, args);\n      promisifyRequest(request).then(resolve, reject);\n    });\n\n    p.request = request;\n    return p;\n  }\n\n  function promisifyCursorRequestCall(obj, method, args) {\n    var p = promisifyRequestCall(obj, method, args);\n    return p.then(function(value) {\n      if (!value) return;\n      return new Cursor(value, p.request);\n    });\n  }\n\n  function proxyProperties(ProxyClass, targetProp, properties) {\n    properties.forEach(function(prop) {\n      Object.defineProperty(ProxyClass.prototype, prop, {\n        get: function() {\n          return this[targetProp][prop];\n        },\n        set: function(val) {\n          this[targetProp][prop] = val;\n        }\n      });\n    });\n  }\n\n  function proxyRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function proxyMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return this[targetProp][prop].apply(this[targetProp], arguments);\n      };\n    });\n  }\n\n  function proxyCursorRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyCursorRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function Index(index) {\n    this._index = index;\n  }\n\n  proxyProperties(Index, '_index', [\n    'name',\n    'keyPath',\n    'multiEntry',\n    'unique'\n  ]);\n\n  proxyRequestMethods(Index, '_index', IDBIndex, [\n    'get',\n    'getKey',\n    'getAll',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(Index, '_index', IDBIndex, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  function Cursor(cursor, request) {\n    this._cursor = cursor;\n    this._request = request;\n  }\n\n  proxyProperties(Cursor, '_cursor', [\n    'direction',\n    'key',\n    'primaryKey',\n    'value'\n  ]);\n\n  proxyRequestMethods(Cursor, '_cursor', IDBCursor, [\n    'update',\n    'delete'\n  ]);\n\n  // proxy 'next' methods\n  ['advance', 'continue', 'continuePrimaryKey'].forEach(function(methodName) {\n    if (!(methodName in IDBCursor.prototype)) return;\n    Cursor.prototype[methodName] = function() {\n      var cursor = this;\n      var args = arguments;\n      return Promise.resolve().then(function() {\n        cursor._cursor[methodName].apply(cursor._cursor, args);\n        return promisifyRequest(cursor._request).then(function(value) {\n          if (!value) return;\n          return new Cursor(value, cursor._request);\n        });\n      });\n    };\n  });\n\n  function ObjectStore(store) {\n    this._store = store;\n  }\n\n  ObjectStore.prototype.createIndex = function() {\n    return new Index(this._store.createIndex.apply(this._store, arguments));\n  };\n\n  ObjectStore.prototype.index = function() {\n    return new Index(this._store.index.apply(this._store, arguments));\n  };\n\n  proxyProperties(ObjectStore, '_store', [\n    'name',\n    'keyPath',\n    'indexNames',\n    'autoIncrement'\n  ]);\n\n  proxyRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'put',\n    'add',\n    'delete',\n    'clear',\n    'get',\n    'getAll',\n    'getKey',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  proxyMethods(ObjectStore, '_store', IDBObjectStore, [\n    'deleteIndex'\n  ]);\n\n  function Transaction(idbTransaction) {\n    this._tx = idbTransaction;\n    this.complete = new Promise(function(resolve, reject) {\n      idbTransaction.oncomplete = function() {\n        resolve();\n      };\n      idbTransaction.onerror = function() {\n        reject(idbTransaction.error);\n      };\n      idbTransaction.onabort = function() {\n        reject(idbTransaction.error);\n      };\n    });\n  }\n\n  Transaction.prototype.objectStore = function() {\n    return new ObjectStore(this._tx.objectStore.apply(this._tx, arguments));\n  };\n\n  proxyProperties(Transaction, '_tx', [\n    'objectStoreNames',\n    'mode'\n  ]);\n\n  proxyMethods(Transaction, '_tx', IDBTransaction, [\n    'abort'\n  ]);\n\n  function UpgradeDB(db, oldVersion, transaction) {\n    this._db = db;\n    this.oldVersion = oldVersion;\n    this.transaction = new Transaction(transaction);\n  }\n\n  UpgradeDB.prototype.createObjectStore = function() {\n    return new ObjectStore(this._db.createObjectStore.apply(this._db, arguments));\n  };\n\n  proxyProperties(UpgradeDB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(UpgradeDB, '_db', IDBDatabase, [\n    'deleteObjectStore',\n    'close'\n  ]);\n\n  function DB(db) {\n    this._db = db;\n  }\n\n  DB.prototype.transaction = function() {\n    return new Transaction(this._db.transaction.apply(this._db, arguments));\n  };\n\n  proxyProperties(DB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(DB, '_db', IDBDatabase, [\n    'close'\n  ]);\n\n  // Add cursor iterators\n  // TODO: remove this once browsers do the right thing with promises\n  ['openCursor', 'openKeyCursor'].forEach(function(funcName) {\n    [ObjectStore, Index].forEach(function(Constructor) {\n      Constructor.prototype[funcName.replace('open', 'iterate')] = function() {\n        var args = toArray(arguments);\n        var callback = args[args.length - 1];\n        var nativeObject = this._store || this._index;\n        var request = nativeObject[funcName].apply(nativeObject, args.slice(0, -1));\n        request.onsuccess = function() {\n          callback(request.result);\n        };\n      };\n    });\n  });\n\n  // polyfill getAll\n  [Index, ObjectStore].forEach(function(Constructor) {\n    if (Constructor.prototype.getAll) return;\n    Constructor.prototype.getAll = function(query, count) {\n      var instance = this;\n      var items = [];\n\n      return new Promise(function(resolve) {\n        instance.iterateCursor(query, function(cursor) {\n          if (!cursor) {\n            resolve(items);\n            return;\n          }\n          items.push(cursor.value);\n\n          if (count !== undefined && items.length == count) {\n            resolve(items);\n            return;\n          }\n          cursor.continue();\n        });\n      });\n    };\n  });\n\n  var exp = {\n    open: function(name, version, upgradeCallback) {\n      var p = promisifyRequestCall(indexedDB, 'open', [name, version]);\n      var request = p.request;\n\n      request.onupgradeneeded = function(event) {\n        if (upgradeCallback) {\n          upgradeCallback(new UpgradeDB(request.result, event.oldVersion, request.transaction));\n        }\n      };\n\n      return p.then(function(db) {\n        return new DB(db);\n      });\n    },\n    delete: function(name) {\n      return promisifyRequestCall(indexedDB, 'deleteDatabase', [name]);\n    }\n  };\n\n  if (typeof module !== 'undefined') {\n    module.exports = exp;\n    module.exports.default = module.exports;\n  }\n  else {\n    self.idb = exp;\n  }\n}());\n","const ImageInfo = require('./images');\r\nconst idb = require('idb');\r\n/**\r\n * Common database helper functions.\r\n */\r\nclass DBHelper {\r\n\r\n  /**\r\n   * Database URL.\r\n   * Change this to restaurants.json file location on your server.\r\n   */\r\n  static get DATABASE_URL() {\r\n    const port = '@@server_port' // Change this to your server port\r\n    return `http://localhost:${port}/restaurants`;\r\n  }\r\n\r\n  static initIndexedDB() {\r\n    this.dbPromise = idb.open('restaurant-db', 1, function (upgradeDb) {\r\n      switch (upgradeDb.oldVersion) {\r\n        case 0:\r\n        case 1:\r\n          const restaurantStore = upgradeDb.createObjectStore('restaurants', {\r\n            keyPath: 'id'\r\n          });\r\n          restaurantStore.createIndex('photographs', 'photograph');\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Fetch all restaurants.\r\n   */\r\n  static fetchRestaurants(callback) {\r\n    var self = this;\r\n\r\n\r\n    let xhr = new XMLHttpRequest();\r\n    xhr.open('GET', DBHelper.DATABASE_URL);\r\n    xhr.onload = () => {\r\n      if (xhr.status === 200) { // Got a success response from server!\r\n        const restaurants = JSON.parse(xhr.responseText);\r\n        const imageData = ImageInfo.ImageInfoData;\r\n        restaurants.map(function (restaurant) {\r\n          if (restaurant.photograph) {\r\n            restaurant.alt = imageData[restaurant.photograph].alt;\r\n            restaurant.caption = imageData[restaurant.photograph].caption;\r\n          }\r\n          self.dbPromise.then(function (db) {\r\n            var tx = db.transaction('restaurants', 'readwrite');\r\n            var restaurantStore = tx.objectStore('restaurants');\r\n            return restaurantStore.put(restaurant);\r\n          }).then(function () {\r\n            console.log('restaurants done promise');\r\n          });\r\n\r\n          return restaurant;\r\n        });\r\n        callback(null, restaurants);\r\n      } else { // Oops!. Got an error from server.\r\n        this.dbPromise.then(function (db) {\r\n          var tx = db.transaction('restaurants');\r\n          var restaurantsStore = tx.objectStore('restaurants');\r\n          return restaurantsStore.getAll();\r\n        }).then(function (restaurants) {\r\n          callback(null, restaurants);\r\n        }).catch(function () {\r\n          const error = (`Request failed.`);\r\n          callback(error, null);\r\n        });\r\n      }\r\n    };\r\n    xhr.send();\r\n  }\r\n\r\n  /**\r\n   * Fetch a restaurant by its ID.\r\n   */\r\n  static fetchRestaurantById(id, callback) {\r\n    var self = this;\r\n\r\n    let xhr = new XMLHttpRequest();\r\n    xhr.open('GET', DBHelper.DATABASE_URL + '/' + id);\r\n    xhr.onload = () => {\r\n      if (xhr.status === 200) { // Got a success response from server!\r\n        const restaurant = JSON.parse(xhr.responseText);\r\n        if (restaurant.photograph) {\r\n          const imageData = ImageInfo.ImageInfoData;\r\n          restaurant.alt = imageData[restaurant.photograph].alt;\r\n          restaurant.caption = imageData[restaurant.photograph].caption;\r\n        }\r\n        self.dbPromise.then(function (db) {\r\n          var tx = db.transaction('restaurants', 'readwrite');\r\n          var restaurantStore = tx.objectStore('restaurants');\r\n          return restaurantStore.put(restaurant);\r\n        })\r\n        callback(null, restaurant);\r\n      } else { // Oops!. Got an error from server.\r\n        this.dbPromise.then(function (db) {\r\n          var tx = db.transaction('restaurants');\r\n          var restaurantsStore = tx.objectStore('restaurants');\r\n          return restaurantsStore.get(parseInt(id));\r\n        }).then(function (restaurant) {\r\n          callback(null, restaurant);\r\n        }).catch(function () {\r\n          const error = (`Request failed.`);\r\n          callback(error, null);\r\n        });\r\n      }\r\n    };\r\n    xhr.send();\r\n  }\r\n\r\n  /**\r\n   * Fetch restaurants by a cuisine type with proper error handling.\r\n   */\r\n  static fetchRestaurantByCuisine(cuisine, callback) {\r\n    // Fetch all restaurants  with proper error handling\r\n    DBHelper.fetchRestaurants((error, restaurants) => {\r\n      if (error) {\r\n        callback(error, null);\r\n      } else {\r\n        // Filter restaurants to have only given cuisine type\r\n        const results = restaurants.filter(r => r.cuisine_type == cuisine);\r\n        callback(null, results);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Fetch restaurants by a neighborhood with proper error handling.\r\n   */\r\n  static fetchRestaurantByNeighborhood(neighborhood, callback) {\r\n    // Fetch all restaurants\r\n    DBHelper.fetchRestaurants((error, restaurants) => {\r\n      if (error) {\r\n        callback(error, null);\r\n      } else {\r\n        // Filter restaurants to have only given neighborhood\r\n        const results = restaurants.filter(r => r.neighborhood == neighborhood);\r\n        callback(null, results);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Fetch restaurants by a cuisine and a neighborhood with proper error handling.\r\n   */\r\n  static fetchRestaurantByCuisineAndNeighborhood(cuisine, neighborhood, callback) {\r\n    // Fetch all restaurants\r\n    DBHelper.fetchRestaurants((error, restaurants) => {\r\n      if (error) {\r\n        callback(error, null);\r\n      } else {\r\n        let results = restaurants\r\n        if (cuisine != 'all') { // filter by cuisine\r\n          results = results.filter(r => r.cuisine_type == cuisine);\r\n        }\r\n        if (neighborhood != 'all') { // filter by neighborhood\r\n          results = results.filter(r => r.neighborhood == neighborhood);\r\n        }\r\n        callback(null, results);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Fetch all neighborhoods with proper error handling.\r\n   */\r\n  static fetchNeighborhoods(callback) {\r\n    // Fetch all restaurants\r\n    DBHelper.fetchRestaurants((error, restaurants) => {\r\n      if (error) {\r\n        callback(error, null);\r\n      } else {\r\n        // Get all neighborhoods from all restaurants\r\n        const neighborhoods = restaurants.map((v, i) => restaurants[i].neighborhood)\r\n        // Remove duplicates from neighborhoods\r\n        const uniqueNeighborhoods = neighborhoods.filter((v, i) => neighborhoods.indexOf(v) == i)\r\n        callback(null, uniqueNeighborhoods);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Fetch all cuisines with proper error handling.\r\n   */\r\n  static fetchCuisines(callback) {\r\n    // Fetch all restaurants\r\n    DBHelper.fetchRestaurants((error, restaurants) => {\r\n      if (error) {\r\n        callback(error, null);\r\n      } else {\r\n        // Get all cuisines from all restaurants\r\n        const cuisines = restaurants.map((v, i) => restaurants[i].cuisine_type)\r\n        // Remove duplicates from cuisines\r\n        const uniqueCuisines = cuisines.filter((v, i) => cuisines.indexOf(v) == i)\r\n        callback(null, uniqueCuisines);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Restaurant page URL.\r\n   */\r\n  static urlForRestaurant(restaurant) {\r\n    return (`./restaurant.html?id=${restaurant.id}`);\r\n  }\r\n\r\n  /**\r\n   * Restaurant image URLs JSON.\r\n   */\r\n  static imageUrlForRestaurant(restaurant) {\r\n    const representationsURLs = DBHelper.imageRepresentationsPaths(restaurant.photograph);\r\n    return representationsURLs;\r\n  }\r\n\r\n  /**\r\n   * Paths for various image representations\r\n   */\r\n  static imageRepresentationsPaths(filename) {\r\n    const [folderName, suffix] = ['./img/', 'jpg'] //,'webp'];\r\n    const large_1x = folderName.concat(filename, '-1024_1x', '.', suffix);\r\n    const large_2x = folderName.concat(filename, '-1024_2x', '.', suffix);\r\n    const small_1x = folderName.concat(filename, '-560_1x', '.', suffix);\r\n    const small_2x = folderName.concat(filename, '-560_2x', '.', suffix);\r\n\r\n    return {\r\n      large_1x: large_1x,\r\n      large_2x: large_2x,\r\n      small_1x: small_1x,\r\n      small_2x: small_2x\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Map marker for a restaurant.\r\n   */\r\n  static mapMarkerForRestaurant(restaurant, map) {\r\n    const marker = new google.maps.Marker({\r\n      position: restaurant.latlng,\r\n      title: restaurant.name,\r\n      url: DBHelper.urlForRestaurant(restaurant),\r\n      map: map,\r\n      animation: google.maps.Animation.DROP\r\n    });\r\n    return marker;\r\n  }\r\n\r\n}\r\nmodule.exports = DBHelper;","/**\n * Common image info class\n */\nclass ImageInfo {\n\n  static get ImageInfoData() {\n\n    return {\n      1: {\n        \"id\": 1,\n        \"photograph\": \"1\",\n        \"alt\": \"the main restaurant area\",\n        \"caption\": \"Large space with nice decoration\"\n      },\n      2: {\n        \"id\": 2,\n        \"photograph\": \"2\",\n        \"alt\": \"pizza on a plate\",\n        \"caption\": \"Tasty pizzas made every day\"\n      },\n      3: {\n        \"id\": 3,\n        \"photograph\": \"3\",\n        \"alt\": \"the main restaurant area empty\",\n        \"caption\": \"Modern design to enjoy your meals\",\n      },\n      4: {\n        \"id\": 4,\n        \"photograph\": \"4\",\n        \"alt\": \"the entrance of the shop\",\n        \"caption\": \"The corner shop, easy to spot\"\n      },\n      5: {\n        \"id\": 5,\n        \"photograph\": \"5\",\n        \"alt\": \"inside the shop, customers and staff\",\n        \"caption\": \"Meet our friendly staff\"\n      },\n      6: {\n        \"id\": 6,\n        \"photograph\": \"6\",\n        \"alt\": \"the area inside with some people queueing and other eating\",\n        \"caption\": \"Large space for big groups\"\n      },\n      7: {\n        \"id\": 7,\n        \"photograph\": \"7\",\n        \"alt\": \"black and white, the display of the shop with 2 people passing by\",\n        \"caption\": \"Our classic shop, still keeping our values\"\n      },\n      8: {\n        \"id\": 8,\n        \"name\": \"The Dutch\",\n        \"neighborhood\": \"Manhattan\",\n        \"photograph\": \"8\"\n      },\n      9: {\n        \"id\": 9,\n        \"photograph\": \"9\",\n        \"caption\": \"Enjoying our home made meals\",\n        \"alt\": \"black and white, people eating in the restaurant\"\n      },\n      10: {\n        \"id\": 10,\n        \"photograph\": \"10\",\n        \"alt\": \"the area inside the shop, the furniture and bar, without people\",\n        \"caption\": \"Modern space, ready to serve your appetite\"\n      }\n    }\n  }\n}\n\nmodule.exports = ImageInfo;","const DBHelper = require('./dbhelper');\n\nlet restaurant;\nvar map;\n\n/**\n * Initialize Google map, called from HTML.\n */\nwindow.initMap = () => {\n  fetchRestaurantFromURL((error, restaurant) => {\n    if (error) { // Got an error!\n      console.error(error);\n    } else {\n      this.map = new google.maps.Map(document.getElementById('map'), {\n        zoom: 16,\n        center: restaurant.latlng,\n        scrollwheel: false\n      });\n      fillBreadcrumb();\n      DBHelper.mapMarkerForRestaurant(this.restaurant, this.map);\n    }\n  });\n}\n\n/**\n * Initialise indexedDB\n */\nDBHelper.initIndexedDB();\n\n\n/**\n * Get current restaurant from page URL.\n */\nfetchRestaurantFromURL = (callback) => {\n  if (this.restaurant) { // restaurant already fetched!\n    callback(null, this.restaurant)\n    return;\n  }\n  const id = getParameterByName('id');\n  if (!id) { // no id found in URL\n    error = 'No restaurant id in URL'\n    callback(error, null);\n  } else {\n    DBHelper.fetchRestaurantById(id, (error, restaurant) => {\n      this.restaurant = restaurant;\n      if (!restaurant) {\n        console.error(error);\n        return;\n      }\n      fillRestaurantHTML();\n      callback(null, restaurant)\n    });\n  }\n}\n\n/**\n * Create restaurant HTML and add it to the webpage\n */\nfillRestaurantHTML = (restaurant = this.restaurant) => {\n  const name = document.getElementById('restaurant-name');\n  name.innerHTML = restaurant.name;\n\n  const address = document.getElementById('restaurant-address');\n  address.innerHTML = restaurant.address;\n\n  if (restaurant.photograph) {\n    const picture = document.getElementById('restaurant-img');\n    picture.className = 'restaurant-img';\n    picture.setAttribute('aria-labelledby', \"fig_\" + restaurant.id);\n    picture.setAttribute('role', 'img');\n\n    const imageRepresentations = DBHelper.imageUrlForRestaurant(restaurant);\n    const sourceSmall = document.createElement('source');\n    sourceSmall.setAttribute('media', '(max-width:700px)')\n    sourceSmall.setAttribute('srcset',\n      imageRepresentations.small_1x\n      .concat(' 1x,')\n      .concat(imageRepresentations.small_2x)\n      .concat(' 2x')\n    );\n    picture.append(sourceSmall);\n\n    const sourceLarge = document.createElement('source');\n    sourceLarge.setAttribute('media', '(min-width:701px)')\n    sourceLarge.setAttribute('srcset',\n      imageRepresentations.large_1x\n      .concat(' 1x,')\n      .concat(imageRepresentations.large_2x)\n      .concat(' 2x')\n    );\n    picture.append(sourceLarge);\n\n    const image = document.createElement('img');\n    image.src = imageRepresentations.small_2x;\n    image.setAttribute('alt', 'restaurant '.concat(restaurant.name, ', ', restaurant.alt));\n    image.className = 'restaurant-img';\n    picture.append(image);\n\n    const figcaption = document.createElement('figcaption');\n    figcaption.setAttribute('id', \"fig_\" + restaurant.id)\n    figcaption.innerHTML = restaurant.caption;\n    picture.append(figcaption);\n  }\n\n  const cuisine = document.getElementById('restaurant-cuisine');\n  cuisine.innerHTML = restaurant.cuisine_type;\n\n  // fill operating hours\n  if (restaurant.operating_hours) {\n    fillRestaurantHoursHTML();\n  }\n  // fill reviews\n  fillReviewsHTML();\n}\n\n/**\n * Create restaurant operating hours HTML table and add it to the webpage.\n */\nfillRestaurantHoursHTML = (operatingHours = this.restaurant.operating_hours) => {\n  const hours = document.getElementById('restaurant-hours');\n  for (let key in operatingHours) {\n    const row = document.createElement('tr');\n\n    const day = document.createElement('td');\n    day.innerHTML = key;\n    row.appendChild(day);\n\n    const time = document.createElement('td');\n    time.innerHTML = operatingHours[key];\n    row.appendChild(time);\n\n    hours.appendChild(row);\n  }\n}\n\n/**\n * Create all reviews HTML and add them to the webpage.\n */\nfillReviewsHTML = (reviews = this.restaurant.reviews) => {\n  const container = document.getElementById('reviews-container');\n  const title = document.createElement('h2');\n  title.innerHTML = 'Reviews';\n  container.appendChild(title);\n\n  if (!reviews) {\n    const noReviews = document.createElement('p');\n    noReviews.innerHTML = 'No reviews yet!';\n    container.appendChild(noReviews);\n    return;\n  }\n  const ul = document.getElementById('reviews-list');\n  reviews.forEach(review => {\n    ul.appendChild(createReviewHTML(review));\n  });\n  container.appendChild(ul);\n}\n\n/**\n * Create review HTML and add it to the webpage.\n */\ncreateReviewHTML = (review) => {\n  const li = document.createElement('li');\n  const name = document.createElement('p');\n  name.innerHTML = review.name;\n  li.appendChild(name);\n\n  const date = document.createElement('p');\n  date.innerHTML = review.date;\n  li.appendChild(date);\n\n  const rating = document.createElement('p');\n  rating.innerHTML = `Rating: ${review.rating}`;\n  li.appendChild(rating);\n\n  const comments = document.createElement('p');\n  comments.innerHTML = review.comments;\n  li.appendChild(comments);\n\n  return li;\n}\n\n/**\n * Add restaurant name to the breadcrumb navigation menu\n */\nfillBreadcrumb = (restaurant = this.restaurant) => {\n  const breadcrumb = document.getElementById('breadcrumb');\n  const li = document.createElement('li');\n  const a_link = document.createElement('a');\n  a_link.setAttribute('href', '#');\n  a_link.setAttribute('aria-current', 'page');\n  a_link.setAttribute('class', 'current-page')\n  a_link.innerHTML = restaurant.name;\n  li.appendChild(a_link);\n  breadcrumb.appendChild(li);\n}\n\n/**\n * Get a parameter by name from page URL.\n */\ngetParameterByName = (name, url) => {\n  if (!url)\n    url = window.location.href;\n  name = name.replace(/[\\[\\]]/g, '\\\\$&');\n  const regex = new RegExp(`[?&]${name}(=([^&#]*)|&|#|$)`),\n    results = regex.exec(url);\n  if (!results)\n    return null;\n  if (!results[2])\n    return '';\n  return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n}"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}